// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: argeo/nar/nar-base/proto/common/titan/titan_poi_management.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Niantic.ARDK.Uploader.Protos {

  /// <summary>Holder for reflection information generated from argeo/nar/nar-base/proto/common/titan/titan_poi_management.proto</summary>
  public static partial class TitanPoiManagementReflection {

    #region Descriptor
    /// <summary>File descriptor for argeo/nar/nar-base/proto/common/titan/titan_poi_management.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TitanPoiManagementReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkBhcmdlby9uYXIvbmFyLWJhc2UvcHJvdG8vY29tbW9uL3RpdGFuL3RpdGFu",
            "X3BvaV9tYW5hZ2VtZW50LnByb3RvEjxjb20ubmlhbnRpY3Byb2plY3QuZ2Vv",
            "ZGF0YS5wbGF5ZXJzdWJtaXNzaW9uLnByb3RvLnJwYy5jbGllbnQaMmFyZ2Vv",
            "L25hci9uYXItYmFzZS9wcm90by9jb21tb24vdGl0YW4vY29tbW9uLnByb3Rv",
            "Gjhhcmdlby9uYXIvbmFyLWJhc2UvcHJvdG8vY29tbW9uL2FyX2NvbW1vbl9t",
            "ZXRhZGF0YS5wcm90byIsCipHZXRQbGF5ZXJTdWJtaXNzaW9uVmFsaWRhdGlv",
            "blNldHRpbmdzUHJvdG8iTQotR2V0UGxheWVyU3VibWlzc2lvblZhbGlkYXRp",
            "b25TZXR0aW5nc091dFByb3RvEhwKFGJhbm5lZF9tZXRhZGF0YV90ZXh0GAEg",
            "AygJIt0CChFTdWJtaXROZXdQb2lQcm90bxINCgV0aXRsZRgBIAEoCRIYChBs",
            "b25nX2Rlc2NyaXB0aW9uGAIgASgJEg4KBmxhdF9FNhgEIAEoBRIOCgZsbmdf",
            "RTYYBSABKAUSHAoUc3VwcG9ydGluZ19zdGF0ZW1lbnQYDiABKAkSGQoRYXN5",
            "bmNfZmlsZV91cGxvYWQYEiABKAgSJQodcGxheWVyX3N1Ym1pdHRlZF9jYXRl",
            "Z29yeV9pZHMYEyADKAkSGwoTY2F0ZWdvcnlfc3VnZ2VzdGlvbhgUIAEoCRJa",
            "Cg9ub21pbmF0aW9uX3R5cGUYFSABKA4yQS5jb20ubmlhbnRpY3Byb2plY3Qu",
            "Z2VvZGF0YS5wbGF5ZXJzdWJtaXNzaW9uLnByb3RvLk5vbWluYXRpb25UeXBl",
            "EhQKDGRldmVsb3Blcl9pZBgWIAEoCUoECAMQBEoECAYQDkoECA8QEiLQAgoU",
            "U3VibWl0TmV3UG9pT3V0UHJvdG8SaQoGc3RhdHVzGAEgASgOMlkuY29tLm5p",
            "YW50aWNwcm9qZWN0Lmdlb2RhdGEucGxheWVyc3VibWlzc2lvbi5wcm90by5y",
            "cGMuY2xpZW50LlN1Ym1pdE5ld1BvaU91dFByb3RvLlN0YXR1cxIVCg1zdWJt",
            "aXNzaW9uX2lkGAIgASgJEhAKCG1lc3NhZ2VzGAMgAygJEg4KBnBvaV9pZBgE",
            "IAEoCSKTAQoGU3RhdHVzEgkKBVVOU0VUEAASCwoHU1VDQ0VTUxABEgsKB0ZB",
            "SUxVUkUQAhISCg5JTlRFUk5BTF9FUlJPUhADEh8KG1RPT19NQU5ZX1JFQ0VO",
            "VF9TVUJNSVNTSU9OUxAEEhEKDUlOVkFMSURfSU5QVVQQBRIJCgVNSU5PUhAG",
            "EhEKDU5PVF9BVkFJTEFCTEUQByKyAQoTU3VibWl0UG9pSW1hZ2VQcm90bxIO",
            "CgZwb2lfaWQYASABKAkSGQoRYXN5bmNfZmlsZV91cGxvYWQYAiABKAgSWgoP",
            "bm9taW5hdGlvbl90eXBlGBUgASgOMkEuY29tLm5pYW50aWNwcm9qZWN0Lmdl",
            "b2RhdGEucGxheWVyc3VibWlzc2lvbi5wcm90by5Ob21pbmF0aW9uVHlwZRIU",
            "CgxkZXZlbG9wZXJfaWQYAyABKAkiVgogU3VibWl0UG9pVGV4dE1ldGFkYXRh",
            "VXBkYXRlUHJvdG8SDgoGcG9pX2lkGAEgASgJEg0KBXRpdGxlGAIgASgJEhMK",
            "C2Rlc2NyaXB0aW9uGAMgASgJInYKIFN1Ym1pdFBvaUNhdGVnb3J5Vm90ZVJl",
            "Y29yZFByb3RvEg4KBnBvaV9pZBgBIAEoCRIlCh1wbGF5ZXJfc3VibWl0dGVk",
            "X2NhdGVnb3J5X2lkcxgCIAMoCRIbChNjYXRlZ29yeV9zdWdnZXN0aW9uGAMg",
            "ASgJIoQBChxTdWJtaXRQb2lMb2NhdGlvblVwZGF0ZVByb3RvEg4KBnBvaV9p",
            "ZBgBIAEoCRJUCghsb2NhdGlvbhgCIAEoCzJCLmNvbS5uaWFudGljcHJvamVj",
            "dC5nZW9kYXRhLnBsYXllcnN1Ym1pc3Npb24ucHJvdG8uTG9jYXRpb25FNlBy",
            "b3RvIowBCh1TdWJtaXRQb2lUYWtlZG93blJlcXVlc3RQcm90bxIOCgZwb2lf",
            "aWQYASABKAkSWwoOaW52YWxpZF9yZWFzb24YAiABKA4yQy5jb20ubmlhbnRp",
            "Y3Byb2plY3QuZ2VvZGF0YS5wbGF5ZXJzdWJtaXNzaW9uLnByb3RvLlBvaUlu",
            "dmFsaWRSZWFzb24iiwEKI1N1Ym1pdFNwb25zb3JQb2lMb2NhdGlvblVwZGF0",
            "ZVByb3RvEg4KBnBvaV9pZBgBIAEoCRJUCghsb2NhdGlvbhgCIAEoCzJCLmNv",
            "bS5uaWFudGljcHJvamVjdC5nZW9kYXRhLnBsYXllcnN1Ym1pc3Npb24ucHJv",
            "dG8uTG9jYXRpb25FNlByb3RvIq0BChtTdWJtaXRTcG9uc29yUG9pUmVwb3J0",
            "UHJvdG8SDgoGcG9pX2lkGAEgASgJEmIKDmludmFsaWRfcmVhc29uGAIgASgO",
            "MkouY29tLm5pYW50aWNwcm9qZWN0Lmdlb2RhdGEucGxheWVyc3VibWlzc2lv",
            "bi5wcm90by5TcG9uc29yUG9pSW52YWxpZFJlYXNvbhIaChJhZGRpdGlvbmFs",
            "X2RldGFpbHMYAyABKAki2AMKH1BvaVZpZGVvU3VibWlzc2lvbk1ldGFkYXRh",
            "UHJvdG8SDgoGcG9pX2lkGAEgASgJElQKCGxvY2F0aW9uGAIgASgLMkIuY29t",
            "Lm5pYW50aWNwcm9qZWN0Lmdlb2RhdGEucGxheWVyc3VibWlzc2lvbi5wcm90",
            "by5Mb2NhdGlvbkU2UHJvdG8SFAoMcGxheWVyX2xldmVsGAMgASgFEk4KCXVz",
            "ZXJfdHlwZRgEIAEoDjI7LmNvbS5uaWFudGljcHJvamVjdC5nZW9kYXRhLnBs",
            "YXllcnN1Ym1pc3Npb24ucHJvdG8uVXNlclR5cGUSFgoKaXNfcHJpdmF0ZRgF",
            "IAEoCEICGAESGwoTZ2VvZ3JhcGhpY19jb3ZlcmFnZRgGIAEoCRISCgpidWls",
            "dF9mb3JtGAcgAygJEk0KCXNjYW5fdGFncxgIIAMoDjI6LmNvbS5uaWFudGlj",
            "cHJvamVjdC5nZW9kYXRhLnBsYXllcnN1Ym1pc3Npb24ucHJvdG8uU2NhblRh",
            "ZxIUCgxkZXZlbG9wZXJfaWQYCyABKAkSOwoSYXJfY29tbW9uX21ldGFkYXRh",
            "GAwgASgLMh8ubmFyLnRlbGVtZXRyeS5BUkNvbW1vbk1ldGFkYXRhIoUDCh1Q",
            "bGF5ZXJTdWJtaXNzaW9uUmVzcG9uc2VQcm90bxJyCgZzdGF0dXMYASABKA4y",
            "Yi5jb20ubmlhbnRpY3Byb2plY3QuZ2VvZGF0YS5wbGF5ZXJzdWJtaXNzaW9u",
            "LnByb3RvLnJwYy5jbGllbnQuUGxheWVyU3VibWlzc2lvblJlc3BvbnNlUHJv",
            "dG8uU3RhdHVzEhUKDXN1Ym1pc3Npb25faWQYAiABKAkSEAoIbWVzc2FnZXMY",
            "AyADKAkixgEKBlN0YXR1cxIWChJTVEFUVVNfVU5TUEVDSUZJRUQQABILCgdT",
            "VUNDRVNTEAESEgoOSU5URVJOQUxfRVJST1IQAhIfChtUT09fTUFOWV9SRUNF",
            "TlRfU1VCTUlTU0lPTlMQAxIJCgVNSU5PUhAEEhEKDU5PVF9BVkFJTEFCTEUQ",
            "BRIRCg1JTlZBTElEX0lOUFVUEAYSEQoNTUlTU0lOR19JTUFHRRAHEh4KGkRJ",
            "U1RBTkNFX1ZBTElEQVRJT05fRkFJTEVEEAgi8QEKHEdldEF2YWlsYWJsZVN1",
            "Ym1pc3Npb25zUHJvdG8SaQoPc3VibWlzc2lvbl90eXBlGAEgASgOMkwuY29t",
            "Lm5pYW50aWNwcm9qZWN0Lmdlb2RhdGEucGxheWVyc3VibWlzc2lvbi5wcm90",
            "by5QbGF5ZXJTdWJtaXNzaW9uVHlwZVByb3RvQgIYARJmChBzdWJtaXNzaW9u",
            "X3R5cGVzGAIgAygOMkwuY29tLm5pYW50aWNwcm9qZWN0Lmdlb2RhdGEucGxh",
            "eWVyc3VibWlzc2lvbi5wcm90by5QbGF5ZXJTdWJtaXNzaW9uVHlwZVByb3Rv",
            "ItYFCh9HZXRBdmFpbGFibGVTdWJtaXNzaW9uc091dFByb3RvEhwKEHN1Ym1p",
            "c3Npb25zX2xlZnQYASABKAVCAhgBEhwKEG1pbl9wbGF5ZXJfbGV2ZWwYAiAB",
            "KAVCAhgBEhcKD2hhc192YWxpZF9lbWFpbBgDIAEoCBIeChJpc19mZWF0dXJl",
            "X2VuYWJsZWQYBCABKAhCAhgBEjAKJHRpbWVfd2luZG93X2Zvcl9zdWJtaXNz",
            "aW9uc19saW1pdF9tcxgFIAEoA0ICGAESJgoabWF4X3BvaV9kaXN0YW5jZV9p",
            "bl9tZXRlcnMYBiABKAVCAhgBEhoKDmJsYWNrbGlzdGVkX29zGAcgAygJQgIY",
            "ARKJAQocYXZhaWxhYmlsaXR5X3Jlc3VsdF9wZXJfdHlwZRgIIAMoCzJjLmNv",
            "bS5uaWFudGljcHJvamVjdC5nZW9kYXRhLnBsYXllcnN1Ym1pc3Npb24ucHJv",
            "dG8ucnBjLmNsaWVudC5BdmFpbGFibGVTdWJtaXNzaW9uc1BlclN1Ym1pc3Np",
            "b25UeXBlEiEKFWJsYWNrbGlzdGVkX2RldmljZV9pZBgJIAMoCUICGAESMgoq",
            "bWF4X3BvaV9sb2NhdGlvbl9lZGl0X21vdmVfZGlzdGFuY2VfbWV0ZXJzGAog",
            "ASgFEiMKF2lzX3VwbG9hZF9sYXRlcl9lbmFibGVkGAsgASgIQgIYARItCiVj",
            "YXRlZ29yeV9jbG91ZF9zdG9yYWdlX2RpcmVjdG9yeV9wYXRoGAwgASgJEikK",
            "IXVyYmFuX3R5cG9sb2d5X2Nsb3VkX3N0b3JhZ2VfcGF0aBgQIAEoCRIcChRo",
            "YXNfd2F5ZmFyZXJfYWNjb3VudBgNIAEoCBIcChRwYXNzZWRfd2F5ZmFyZXJf",
            "cXVpehgPIAEoCBIqCiJpc19wb2lfc3VibWlzc2lvbl9jYXRlZ29yeV9lbmFi",
            "bGVkGA4gASgIIowECiVBdmFpbGFibGVTdWJtaXNzaW9uc1BlclN1Ym1pc3Np",
            "b25UeXBlEmwKFnBsYXllcl9zdWJtaXNzaW9uX3R5cGUYASABKA4yTC5jb20u",
            "bmlhbnRpY3Byb2plY3QuZ2VvZGF0YS5wbGF5ZXJzdWJtaXNzaW9uLnByb3Rv",
            "LlBsYXllclN1Ym1pc3Npb25UeXBlUHJvdG8SGAoQc3VibWlzc2lvbnNfbGVm",
            "dBgCIAEoBRIYChBtaW5fcGxheWVyX2xldmVsGAMgASgFEhoKEmlzX2ZlYXR1",
            "cmVfZW5hYmxlZBgEIAEoCBIsCiR0aW1lX3dpbmRvd19mb3Jfc3VibWlzc2lv",
            "bnNfbGltaXRfbXMYBSABKAMSIgoabWF4X3BvaV9kaXN0YW5jZV9pbl9tZXRl",
            "cnMYBiABKAUSFgoOYmxhY2tsaXN0ZWRfb3MYByADKAkSHQoVYmxhY2tsaXN0",
            "ZWRfZGV2aWNlX2lkGAggAygJEhsKE2lzX3doaXRlbGlzdGVkX3VzZXIYCSAB",
            "KAgSHwoXaXNfdXBsb2FkX2xhdGVyX2VuYWJsZWQYCiABKAgSHQoVZGFpbHlf",
            "bmV3X3N1Ym1pc3Npb25zGAsgASgCEhcKD21heF9zdWJtaXNzaW9ucxgMIAEo",
            "BRImCh5pc193YXlmYXJlcl9vbmJvYXJkaW5nX2VuYWJsZWQYDSABKAgi0gEK",
            "EUdldFVwbG9hZFVybFByb3RvEg8KB3VzZXJfaWQYASABKAkSFgoOZ2FtZV91",
            "bmlxdWVfaWQYAiABKAkSZQoPc3VibWlzc2lvbl90eXBlGAMgASgOMkwuY29t",
            "Lm5pYW50aWNwcm9qZWN0Lmdlb2RhdGEucGxheWVyc3VibWlzc2lvbi5wcm90",
            "by5QbGF5ZXJTdWJtaXNzaW9uVHlwZVByb3RvEhUKDXN1Ym1pc3Npb25faWQY",
            "BCABKAkSFgoOaW1hZ2VfY29udGV4dHMYBSADKAki5wMKFEdldFVwbG9hZFVy",
            "bE91dFByb3RvEmkKBnN0YXR1cxgBIAEoDjJZLmNvbS5uaWFudGljcHJvamVj",
            "dC5nZW9kYXRhLnBsYXllcnN1Ym1pc3Npb24ucHJvdG8ucnBjLmNsaWVudC5H",
            "ZXRVcGxvYWRVcmxPdXRQcm90by5TdGF0dXMSEgoKc2lnbmVkX3VybBgCIAEo",
            "CRIjChtzdXBwb3J0aW5nX2ltYWdlX3NpZ25lZF91cmwYAyABKAkShgEKE2Nv",
            "bnRleHRfc2lnbmVkX3VybHMYBCADKAsyaS5jb20ubmlhbnRpY3Byb2plY3Qu",
            "Z2VvZGF0YS5wbGF5ZXJzdWJtaXNzaW9uLnByb3RvLnJwYy5jbGllbnQuR2V0",
            "VXBsb2FkVXJsT3V0UHJvdG8uQ29udGV4dFNpZ25lZFVybHNFbnRyeRo4ChZD",
            "b250ZXh0U2lnbmVkVXJsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgC",
            "IAEoCToCOAEiaAoGU3RhdHVzEgkKBVVOU0VUEAASDAoIRkFJTFVSRVMQARIL",
            "CgdTVUNDRVNTEAISGgoWTUlTU0lOR19JTUFHRV9DT05URVhUUxADEhwKGERV",
            "UExJQ0FURV9JTUFHRV9DT05URVhUUxAEIkEKGFVwbG9hZFBvaVBob3RvQnlV",
            "cmxQcm90bxISCgpyZXF1ZXN0X2lkGAEgASgJEhEKCWltYWdlX3VybBgCIAEo",
            "CSLAAQoZUG9ydGFsQ3VyYXRpb25JbWFnZVJlc3VsdCKiAQoGUmVzdWx0EgkK",
            "BVVOU0VUEAASCwoHU1VDQ0VTUxABEhQKEEZFQVRVUkVfRElTQUJMRUQQAhIU",
            "ChBBTFJFQURZX1VQTE9BREVEEAMSEwoPSU1BR0VfTk9UX0ZPVU5EEAQSEQoN",
            "SU1BR0VfVE9PX0JJRxAFEhYKEklNQUdFX05PVF9TRVJWQUJMRRAGEhQKEFBP",
            "UlRBTF9OT1RfRk9VTkQQByKNAQobVXBsb2FkUG9pUGhvdG9CeVVybE91dFBy",
            "b3RvEm4KBnN0YXR1cxgBIAEoDjJeLmNvbS5uaWFudGljcHJvamVjdC5nZW9k",
            "YXRhLnBsYXllcnN1Ym1pc3Npb24ucHJvdG8ucnBjLmNsaWVudC5Qb3J0YWxD",
            "dXJhdGlvbkltYWdlUmVzdWx0LlJlc3VsdCLUAQoaR2VuZXJhdGVHbWFwU2ln",
            "bmVkVXJsUHJvdG8SEAoIbGF0aXR1ZGUYASABKAESEQoJbG9uZ2l0dWRlGAIg",
            "ASgBEg0KBXdpZHRoGAMgASgFEg4KBmhlaWdodBgEIAEoBRIMCgR6b29tGAUg",
            "ASgFEhQKDGxhbmd1YWdlQ29kZRgGIAEoCRITCgtjb3VudHJ5Q29kZRgHIAEo",
            "CRIQCghtYXBTdHlsZRgIIAEoCRIPCgdtYXBUeXBlGAkgASgJEhYKCmljb25Q",
            "YXJhbXMYCiABKAlCAhgBIqoCCh1HZW5lcmF0ZUdtYXBTaWduZWRVcmxPdXRQ",
            "cm90bxJyCgZyZXN1bHQYASABKA4yYi5jb20ubmlhbnRpY3Byb2plY3QuZ2Vv",
            "ZGF0YS5wbGF5ZXJzdWJtaXNzaW9uLnByb3RvLnJwYy5jbGllbnQuR2VuZXJh",
            "dGVHbWFwU2lnbmVkVXJsT3V0UHJvdG8uUmVzdWx0EhIKCnNpZ25lZF91cmwY",
            "AiABKAkigAEKBlJlc3VsdBIJCgVVTlNFVBAAEgsKB1NVQ0NFU1MQARIaChZF",
            "UlJPUl9QTEFZRVJfTk9UX1ZBTElEEAISFgoSRVJST1JfUkFURV9MSU1JVEVE",
            "EAMSFwoTRVJST1JfTUlTU0lOR19JTlBVVBAEEhEKDUVSUk9SX1VOS05PV04Q",
            "BSIWChRHZXRHbWFwU2V0dGluZ3NQcm90byLVAgoXR2V0R21hcFNldHRpbmdz",
            "T3V0UHJvdG8SbAoGcmVzdWx0GAEgASgOMlwuY29tLm5pYW50aWNwcm9qZWN0",
            "Lmdlb2RhdGEucGxheWVyc3VibWlzc2lvbi5wcm90by5ycGMuY2xpZW50Lkdl",
            "dEdtYXBTZXR0aW5nc091dFByb3RvLlJlc3VsdBIZChFnbWFwX3RlbXBsYXRl",
            "X3VybBgCIAEoCRImChptYXhfcG9pX2Rpc3RhbmNlX2luX21ldGVycxgDIAEo",
            "BUICGAESEAoIbWluX3pvb20YBCABKAUSEAoIbWF4X3pvb20YBSABKAUiZQoG",
            "UmVzdWx0EgkKBVVOU0VUEAASCwoHU1VDQ0VTUxABEhEKDUVSUk9SX1VOS05P",
            "V04QAhIYChRFUlJPUl9NSVNTSU5HX0NPTkZJRxADEhYKEkVSUk9SX05PX1VO",
            "SVFVRV9JRBAEIrsBChpHZXRHcmFwZXNob3RVcGxvYWRVcmxQcm90bxJpCg9z",
            "dWJtaXNzaW9uX3R5cGUYASABKA4yTC5jb20ubmlhbnRpY3Byb2plY3QuZ2Vv",
            "ZGF0YS5wbGF5ZXJzdWJtaXNzaW9uLnByb3RvLlBsYXllclN1Ym1pc3Npb25U",
            "eXBlUHJvdG9CAhgBEhUKDXN1Ym1pc3Npb25faWQYAiABKAkSGwoTZmlsZV91",
            "cGxvYWRfY29udGV4dBgDIAMoCSL7BAodR2V0R3JhcGVzaG90VXBsb2FkVXJs",
            "T3V0UHJvdG8ScgoGc3RhdHVzGAEgASgOMmIuY29tLm5pYW50aWNwcm9qZWN0",
            "Lmdlb2RhdGEucGxheWVyc3VibWlzc2lvbi5wcm90by5ycGMuY2xpZW50Lkdl",
            "dEdyYXBlc2hvdFVwbG9hZFVybE91dFByb3RvLlN0YXR1cxKjAQoeZmlsZV9j",
            "b250ZXh0X3RvX2dyYXBlc2hvdF9kYXRhGAQgAygLMnsuY29tLm5pYW50aWNw",
            "cm9qZWN0Lmdlb2RhdGEucGxheWVyc3VibWlzc2lvbi5wcm90by5ycGMuY2xp",
            "ZW50LkdldEdyYXBlc2hvdFVwbG9hZFVybE91dFByb3RvLkZpbGVDb250ZXh0",
            "VG9HcmFwZXNob3REYXRhRW50cnkanAEKH0ZpbGVDb250ZXh0VG9HcmFwZXNo",
            "b3REYXRhRW50cnkSCwoDa2V5GAEgASgJEmgKBXZhbHVlGAIgASgLMlkuY29t",
            "Lm5pYW50aWNwcm9qZWN0Lmdlb2RhdGEucGxheWVyc3VibWlzc2lvbi5wcm90",
            "by5ycGMuY2xpZW50LkdyYXBlc2hvdFVwbG9hZGluZ0RhdGFQcm90bzoCOAEi",
            "oAEKBlN0YXR1cxIJCgVVTlNFVBAAEgsKB0ZBSUxVUkUQARILCgdTVUNDRVNT",
            "EAISGQoVTUlTU0lOR19GSUxFX0NPTlRFWFRTEAMSGgoWRFVQTElDQVRFX0ZJ",
            "TEVfQ09OVEVYVBAEEh8KF01JU1NJTkdfU1VCTUlTU0lPTl9UWVBFEAUaAggB",
            "EhkKFU1JU1NJTkdfU1VCTUlTU0lPTl9JRBAGIqUCChtHcmFwZXNob3RVcGxv",
            "YWRpbmdEYXRhUHJvdG8SaQoKY2h1bmtfZGF0YRgBIAMoCzJVLmNvbS5uaWFu",
            "dGljcHJvamVjdC5nZW9kYXRhLnBsYXllcnN1Ym1pc3Npb24ucHJvdG8ucnBj",
            "LmNsaWVudC5HcmFwZXNob3RDaHVua0RhdGFQcm90bxJtCgxjb21wb3NlX2Rh",
            "dGEYAiABKAsyVy5jb20ubmlhbnRpY3Byb2plY3QuZ2VvZGF0YS5wbGF5ZXJz",
            "dWJtaXNzaW9uLnByb3RvLnJwYy5jbGllbnQuR3JhcGVzaG90Q29tcG9zZURh",
            "dGFQcm90bxISCgpnY3NfYnVja2V0GAMgASgJEhgKEG51bWJlcl9vZl9jaHVu",
            "a3MYBCABKAUixgIKF0dyYXBlc2hvdENodW5rRGF0YVByb3RvEhcKD2NodW5r",
            "X2ZpbGVfcGF0aBgBIAEoCRIUCgxjaHVua19udW1iZXIYAiABKA0SfQoVdXBs",
            "b2FkX2F1dGhlbnRpY2F0aW9uGAMgASgLMl4uY29tLm5pYW50aWNwcm9qZWN0",
            "Lmdlb2RhdGEucGxheWVyc3VibWlzc2lvbi5wcm90by5ycGMuY2xpZW50Lkdy",
            "YXBlc2hvdEF1dGhlbnRpY2F0aW9uRGF0YVByb3RvEn0KFWRlbGV0ZV9hdXRo",
            "ZW50aWNhdGlvbhgEIAEoCzJeLmNvbS5uaWFudGljcHJvamVjdC5nZW9kYXRh",
            "LnBsYXllcnN1Ym1pc3Npb24ucHJvdG8ucnBjLmNsaWVudC5HcmFwZXNob3RB",
            "dXRoZW50aWNhdGlvbkRhdGFQcm90byK7AQoZR3JhcGVzaG90Q29tcG9zZURh",
            "dGFQcm90bxIYChB0YXJnZXRfZmlsZV9wYXRoGAEgASgJEnYKDmF1dGhlbnRp",
            "Y2F0aW9uGAIgASgLMl4uY29tLm5pYW50aWNwcm9qZWN0Lmdlb2RhdGEucGxh",
            "eWVyc3VibWlzc2lvbi5wcm90by5ycGMuY2xpZW50LkdyYXBlc2hvdEF1dGhl",
            "bnRpY2F0aW9uRGF0YVByb3RvEgwKBGhhc2gYAyABKAkiRwogR3JhcGVzaG90",
            "QXV0aGVudGljYXRpb25EYXRhUHJvdG8SFQoNYXV0aG9yaXphdGlvbhgBIAEo",
            "CRIMCgRkYXRlGAIgASgJIqsCChxBc3luY0ZpbGVVcGxvYWRDb21wbGV0ZVBy",
            "b3RvEhUKDXN1Ym1pc3Npb25faWQYASABKAkSeAoNdXBsb2FkX3N0YXR1cxgD",
            "IAEoDjJhLmNvbS5uaWFudGljcHJvamVjdC5nZW9kYXRhLnBsYXllcnN1Ym1p",
            "c3Npb24ucHJvdG8ucnBjLmNsaWVudC5Bc3luY0ZpbGVVcGxvYWRDb21wbGV0",
            "ZVByb3RvLlN0YXR1cxI7ChJhcl9jb21tb25fbWV0YWRhdGEYBCABKAsyHy5u",
            "YXIudGVsZW1ldHJ5LkFSQ29tbW9uTWV0YWRhdGEiNwoGU3RhdHVzEgkKBVVO",
            "U0VUEAASDwoLVVBMT0FEX0RPTkUQARIRCg1VUExPQURfRkFJTEVEEAJKBAgC",
            "EAMivQMKH0FzeW5jRmlsZVVwbG9hZENvbXBsZXRlT3V0UHJvdG8SeAoFZXJy",
            "b3IYASABKA4yaS5jb20ubmlhbnRpY3Byb2plY3QuZ2VvZGF0YS5wbGF5ZXJz",
            "dWJtaXNzaW9uLnByb3RvLnJwYy5jbGllbnQuQXN5bmNGaWxlVXBsb2FkQ29t",
            "cGxldGVPdXRQcm90by5FcnJvclN0YXR1cxJlCg9zdWJtaXNzaW9uX3R5cGUY",
            "AiABKA4yTC5jb20ubmlhbnRpY3Byb2plY3QuZ2VvZGF0YS5wbGF5ZXJzdWJt",
            "aXNzaW9uLnByb3RvLlBsYXllclN1Ym1pc3Npb25UeXBlUHJvdG8SDgoGcG9p",
            "X2lkGAMgASgJEh0KFXBvc3RfYWN0aW9uX2dhbWVfaW5mbxgEIAEoDCKJAQoL",
            "RXJyb3JTdGF0dXMSCQoFVU5TRVQQABIYChRTRVJWRVJfVVBEQVRFX0ZBSUxF",
            "RBABEhkKFU1JU1NJTkdfU1VCTUlTU0lPTl9JRBACEh8KF01JU1NJTkdfU1VC",
            "TUlTU0lPTl9UWVBFEAMaAggBEhkKFU1JU1NJTkdfVVBMT0FEX1NUQVRVUxAE",
            "IhsKGUdldEFSTWFwcGluZ1NldHRpbmdzUHJvdG8ipgEKHEdldEFSTWFwcGlu",
            "Z1NldHRpbmdzT3V0UHJvdG8SKQohaXNfY2xpZW50X3NjYW5fdmFsaWRhdGlv",
            "bl9lbmFibGVkGAEgASgIEikKIWNsaWVudF9zY2FuX3ZhbGlkYXRpb25fYmxv",
            "Y2tlZF9vcxgCIAMoCRIwCihjbGllbnRfc2Nhbl92YWxpZGF0aW9uX2Jsb2Nr",
            "ZWRfZGV2aWNlX2lkGAMgAygJQh+qAhxOaWFudGljLkFSREsuVXBsb2FkZXIu",
            "UHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Niantic.ARDK.Uploader.Protos.CommonReflection.Descriptor, global::Niantic.ARDK.AR.Protobuf.ArCommonMetadataReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.GetPlayerSubmissionValidationSettingsProto), global::Niantic.ARDK.Uploader.Protos.GetPlayerSubmissionValidationSettingsProto.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.GetPlayerSubmissionValidationSettingsOutProto), global::Niantic.ARDK.Uploader.Protos.GetPlayerSubmissionValidationSettingsOutProto.Parser, new[]{ "BannedMetadataText" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.SubmitNewPoiProto), global::Niantic.ARDK.Uploader.Protos.SubmitNewPoiProto.Parser, new[]{ "Title", "LongDescription", "LatE6", "LngE6", "SupportingStatement", "AsyncFileUpload", "PlayerSubmittedCategoryIds", "CategorySuggestion", "NominationType", "DeveloperId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.SubmitNewPoiOutProto), global::Niantic.ARDK.Uploader.Protos.SubmitNewPoiOutProto.Parser, new[]{ "Status", "SubmissionId", "Messages", "PoiId" }, null, new[]{ typeof(global::Niantic.ARDK.Uploader.Protos.SubmitNewPoiOutProto.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.SubmitPoiImageProto), global::Niantic.ARDK.Uploader.Protos.SubmitPoiImageProto.Parser, new[]{ "PoiId", "AsyncFileUpload", "NominationType", "DeveloperId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.SubmitPoiTextMetadataUpdateProto), global::Niantic.ARDK.Uploader.Protos.SubmitPoiTextMetadataUpdateProto.Parser, new[]{ "PoiId", "Title", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.SubmitPoiCategoryVoteRecordProto), global::Niantic.ARDK.Uploader.Protos.SubmitPoiCategoryVoteRecordProto.Parser, new[]{ "PoiId", "PlayerSubmittedCategoryIds", "CategorySuggestion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.SubmitPoiLocationUpdateProto), global::Niantic.ARDK.Uploader.Protos.SubmitPoiLocationUpdateProto.Parser, new[]{ "PoiId", "Location" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.SubmitPoiTakedownRequestProto), global::Niantic.ARDK.Uploader.Protos.SubmitPoiTakedownRequestProto.Parser, new[]{ "PoiId", "InvalidReason" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.SubmitSponsorPoiLocationUpdateProto), global::Niantic.ARDK.Uploader.Protos.SubmitSponsorPoiLocationUpdateProto.Parser, new[]{ "PoiId", "Location" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.SubmitSponsorPoiReportProto), global::Niantic.ARDK.Uploader.Protos.SubmitSponsorPoiReportProto.Parser, new[]{ "PoiId", "InvalidReason", "AdditionalDetails" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.PoiVideoSubmissionMetadataProto), global::Niantic.ARDK.Uploader.Protos.PoiVideoSubmissionMetadataProto.Parser, new[]{ "PoiId", "Location", "PlayerLevel", "UserType", "IsPrivate", "GeographicCoverage", "BuiltForm", "ScanTags", "DeveloperId", "ArCommonMetadata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionResponseProto), global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionResponseProto.Parser, new[]{ "Status", "SubmissionId", "Messages" }, null, new[]{ typeof(global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionResponseProto.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.GetAvailableSubmissionsProto), global::Niantic.ARDK.Uploader.Protos.GetAvailableSubmissionsProto.Parser, new[]{ "SubmissionType", "SubmissionTypes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.GetAvailableSubmissionsOutProto), global::Niantic.ARDK.Uploader.Protos.GetAvailableSubmissionsOutProto.Parser, new[]{ "SubmissionsLeft", "MinPlayerLevel", "HasValidEmail", "IsFeatureEnabled", "TimeWindowForSubmissionsLimitMs", "MaxPoiDistanceInMeters", "BlacklistedOs", "AvailabilityResultPerType", "BlacklistedDeviceId", "MaxPoiLocationEditMoveDistanceMeters", "IsUploadLaterEnabled", "CategoryCloudStorageDirectoryPath", "UrbanTypologyCloudStoragePath", "HasWayfarerAccount", "PassedWayfarerQuiz", "IsPoiSubmissionCategoryEnabled" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.AvailableSubmissionsPerSubmissionType), global::Niantic.ARDK.Uploader.Protos.AvailableSubmissionsPerSubmissionType.Parser, new[]{ "PlayerSubmissionType", "SubmissionsLeft", "MinPlayerLevel", "IsFeatureEnabled", "TimeWindowForSubmissionsLimitMs", "MaxPoiDistanceInMeters", "BlacklistedOs", "BlacklistedDeviceId", "IsWhitelistedUser", "IsUploadLaterEnabled", "DailyNewSubmissions", "MaxSubmissions", "IsWayfarerOnboardingEnabled" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.GetUploadUrlProto), global::Niantic.ARDK.Uploader.Protos.GetUploadUrlProto.Parser, new[]{ "UserId", "GameUniqueId", "SubmissionType", "SubmissionId", "ImageContexts" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.GetUploadUrlOutProto), global::Niantic.ARDK.Uploader.Protos.GetUploadUrlOutProto.Parser, new[]{ "Status", "SignedUrl", "SupportingImageSignedUrl", "ContextSignedUrls" }, null, new[]{ typeof(global::Niantic.ARDK.Uploader.Protos.GetUploadUrlOutProto.Types.Status) }, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.UploadPoiPhotoByUrlProto), global::Niantic.ARDK.Uploader.Protos.UploadPoiPhotoByUrlProto.Parser, new[]{ "RequestId", "ImageUrl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.PortalCurationImageResult), global::Niantic.ARDK.Uploader.Protos.PortalCurationImageResult.Parser, null, null, new[]{ typeof(global::Niantic.ARDK.Uploader.Protos.PortalCurationImageResult.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.UploadPoiPhotoByUrlOutProto), global::Niantic.ARDK.Uploader.Protos.UploadPoiPhotoByUrlOutProto.Parser, new[]{ "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.GenerateGmapSignedUrlProto), global::Niantic.ARDK.Uploader.Protos.GenerateGmapSignedUrlProto.Parser, new[]{ "Latitude", "Longitude", "Width", "Height", "Zoom", "LanguageCode", "CountryCode", "MapStyle", "MapType", "IconParams" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.GenerateGmapSignedUrlOutProto), global::Niantic.ARDK.Uploader.Protos.GenerateGmapSignedUrlOutProto.Parser, new[]{ "Result", "SignedUrl" }, null, new[]{ typeof(global::Niantic.ARDK.Uploader.Protos.GenerateGmapSignedUrlOutProto.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.GetGmapSettingsProto), global::Niantic.ARDK.Uploader.Protos.GetGmapSettingsProto.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.GetGmapSettingsOutProto), global::Niantic.ARDK.Uploader.Protos.GetGmapSettingsOutProto.Parser, new[]{ "Result", "GmapTemplateUrl", "MaxPoiDistanceInMeters", "MinZoom", "MaxZoom" }, null, new[]{ typeof(global::Niantic.ARDK.Uploader.Protos.GetGmapSettingsOutProto.Types.Result) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.GetGrapeshotUploadUrlProto), global::Niantic.ARDK.Uploader.Protos.GetGrapeshotUploadUrlProto.Parser, new[]{ "SubmissionType", "SubmissionId", "FileUploadContext" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.GetGrapeshotUploadUrlOutProto), global::Niantic.ARDK.Uploader.Protos.GetGrapeshotUploadUrlOutProto.Parser, new[]{ "Status", "FileContextToGrapeshotData" }, null, new[]{ typeof(global::Niantic.ARDK.Uploader.Protos.GetGrapeshotUploadUrlOutProto.Types.Status) }, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.GrapeshotUploadingDataProto), global::Niantic.ARDK.Uploader.Protos.GrapeshotUploadingDataProto.Parser, new[]{ "ChunkData", "ComposeData", "GcsBucket", "NumberOfChunks" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.GrapeshotChunkDataProto), global::Niantic.ARDK.Uploader.Protos.GrapeshotChunkDataProto.Parser, new[]{ "ChunkFilePath", "ChunkNumber", "UploadAuthentication", "DeleteAuthentication" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.GrapeshotComposeDataProto), global::Niantic.ARDK.Uploader.Protos.GrapeshotComposeDataProto.Parser, new[]{ "TargetFilePath", "Authentication", "Hash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.GrapeshotAuthenticationDataProto), global::Niantic.ARDK.Uploader.Protos.GrapeshotAuthenticationDataProto.Parser, new[]{ "Authorization", "Date" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.AsyncFileUploadCompleteProto), global::Niantic.ARDK.Uploader.Protos.AsyncFileUploadCompleteProto.Parser, new[]{ "SubmissionId", "UploadStatus", "ArCommonMetadata" }, null, new[]{ typeof(global::Niantic.ARDK.Uploader.Protos.AsyncFileUploadCompleteProto.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.AsyncFileUploadCompleteOutProto), global::Niantic.ARDK.Uploader.Protos.AsyncFileUploadCompleteOutProto.Parser, new[]{ "Error", "SubmissionType", "PoiId", "PostActionGameInfo" }, null, new[]{ typeof(global::Niantic.ARDK.Uploader.Protos.AsyncFileUploadCompleteOutProto.Types.ErrorStatus) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.GetARMappingSettingsProto), global::Niantic.ARDK.Uploader.Protos.GetARMappingSettingsProto.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.GetARMappingSettingsOutProto), global::Niantic.ARDK.Uploader.Protos.GetARMappingSettingsOutProto.Parser, new[]{ "IsClientScanValidationEnabled", "ClientScanValidationBlockedOs", "ClientScanValidationBlockedDeviceId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///  A request from the client for general, contextless player submission settings
  /// </summary>
  public sealed partial class GetPlayerSubmissionValidationSettingsProto : pb::IMessage<GetPlayerSubmissionValidationSettingsProto> {
    private static readonly pb::MessageParser<GetPlayerSubmissionValidationSettingsProto> _parser = new pb::MessageParser<GetPlayerSubmissionValidationSettingsProto>(() => new GetPlayerSubmissionValidationSettingsProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPlayerSubmissionValidationSettingsProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayerSubmissionValidationSettingsProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayerSubmissionValidationSettingsProto(GetPlayerSubmissionValidationSettingsProto other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayerSubmissionValidationSettingsProto Clone() {
      return new GetPlayerSubmissionValidationSettingsProto(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPlayerSubmissionValidationSettingsProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPlayerSubmissionValidationSettingsProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPlayerSubmissionValidationSettingsProto other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  /// <summary>
  ///  Response containing simple, client-relevant, contextless submission settings
  /// </summary>
  public sealed partial class GetPlayerSubmissionValidationSettingsOutProto : pb::IMessage<GetPlayerSubmissionValidationSettingsOutProto> {
    private static readonly pb::MessageParser<GetPlayerSubmissionValidationSettingsOutProto> _parser = new pb::MessageParser<GetPlayerSubmissionValidationSettingsOutProto>(() => new GetPlayerSubmissionValidationSettingsOutProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPlayerSubmissionValidationSettingsOutProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayerSubmissionValidationSettingsOutProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayerSubmissionValidationSettingsOutProto(GetPlayerSubmissionValidationSettingsOutProto other) : this() {
      bannedMetadataText_ = other.bannedMetadataText_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPlayerSubmissionValidationSettingsOutProto Clone() {
      return new GetPlayerSubmissionValidationSettingsOutProto(this);
    }

    /// <summary>Field number for the "banned_metadata_text" field.</summary>
    public const int BannedMetadataTextFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_bannedMetadataText_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> bannedMetadataText_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///  List of banned text strings that should not appear in titles or descriptions
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> BannedMetadataText {
      get { return bannedMetadataText_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPlayerSubmissionValidationSettingsOutProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPlayerSubmissionValidationSettingsOutProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!bannedMetadataText_.Equals(other.bannedMetadataText_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= bannedMetadataText_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      bannedMetadataText_.WriteTo(output, _repeated_bannedMetadataText_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += bannedMetadataText_.CalculateSize(_repeated_bannedMetadataText_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPlayerSubmissionValidationSettingsOutProto other) {
      if (other == null) {
        return;
      }
      bannedMetadataText_.Add(other.bannedMetadataText_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            bannedMetadataText_.AddEntriesFrom(input, _repeated_bannedMetadataText_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  A request to submit a new poi from the client
  /// </summary>
  public sealed partial class SubmitNewPoiProto : pb::IMessage<SubmitNewPoiProto> {
    private static readonly pb::MessageParser<SubmitNewPoiProto> _parser = new pb::MessageParser<SubmitNewPoiProto>(() => new SubmitNewPoiProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmitNewPoiProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitNewPoiProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitNewPoiProto(SubmitNewPoiProto other) : this() {
      title_ = other.title_;
      longDescription_ = other.longDescription_;
      latE6_ = other.latE6_;
      lngE6_ = other.lngE6_;
      supportingStatement_ = other.supportingStatement_;
      asyncFileUpload_ = other.asyncFileUpload_;
      playerSubmittedCategoryIds_ = other.playerSubmittedCategoryIds_.Clone();
      categorySuggestion_ = other.categorySuggestion_;
      nominationType_ = other.nominationType_;
      developerId_ = other.developerId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitNewPoiProto Clone() {
      return new SubmitNewPoiProto(this);
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 1;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "long_description" field.</summary>
    public const int LongDescriptionFieldNumber = 2;
    private string longDescription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LongDescription {
      get { return longDescription_; }
      set {
        longDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lat_E6" field.</summary>
    public const int LatE6FieldNumber = 4;
    private int latE6_;
    /// <summary>
    ///  These are remaining here as separate fields for backwards compatibility, but for future
    ///  location coordinates please use the common LocationE6Proto.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LatE6 {
      get { return latE6_; }
      set {
        latE6_ = value;
      }
    }

    /// <summary>Field number for the "lng_E6" field.</summary>
    public const int LngE6FieldNumber = 5;
    private int lngE6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LngE6 {
      get { return lngE6_; }
      set {
        lngE6_ = value;
      }
    }

    /// <summary>Field number for the "supporting_statement" field.</summary>
    public const int SupportingStatementFieldNumber = 14;
    private string supportingStatement_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SupportingStatement {
      get { return supportingStatement_; }
      set {
        supportingStatement_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "async_file_upload" field.</summary>
    public const int AsyncFileUploadFieldNumber = 18;
    private bool asyncFileUpload_;
    /// <summary>
    ///  flag to enable grapeshot upload
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AsyncFileUpload {
      get { return asyncFileUpload_; }
      set {
        asyncFileUpload_ = value;
      }
    }

    /// <summary>Field number for the "player_submitted_category_ids" field.</summary>
    public const int PlayerSubmittedCategoryIdsFieldNumber = 19;
    private static readonly pb::FieldCodec<string> _repeated_playerSubmittedCategoryIds_codec
        = pb::FieldCodec.ForString(154);
    private readonly pbc::RepeatedField<string> playerSubmittedCategoryIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///  New categories ids
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> PlayerSubmittedCategoryIds {
      get { return playerSubmittedCategoryIds_; }
    }

    /// <summary>Field number for the "category_suggestion" field.</summary>
    public const int CategorySuggestionFieldNumber = 20;
    private string categorySuggestion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CategorySuggestion {
      get { return categorySuggestion_; }
      set {
        categorySuggestion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nomination_type" field.</summary>
    public const int NominationTypeFieldNumber = 21;
    private global::Niantic.ARDK.Uploader.Protos.NominationType nominationType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.Uploader.Protos.NominationType NominationType {
      get { return nominationType_; }
      set {
        nominationType_ = value;
      }
    }

    /// <summary>Field number for the "developer_id" field.</summary>
    public const int DeveloperIdFieldNumber = 22;
    private string developerId_ = "";
    /// <summary>
    ///  might be different from player_id who submit the request, (eg. 8th wall account uid)
    ///  TODO TITAN-10174: remove from submitter request, and use player context on WFA &amp; jwt on geoservice
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeveloperId {
      get { return developerId_; }
      set {
        developerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmitNewPoiProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmitNewPoiProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if (LongDescription != other.LongDescription) return false;
      if (LatE6 != other.LatE6) return false;
      if (LngE6 != other.LngE6) return false;
      if (SupportingStatement != other.SupportingStatement) return false;
      if (AsyncFileUpload != other.AsyncFileUpload) return false;
      if(!playerSubmittedCategoryIds_.Equals(other.playerSubmittedCategoryIds_)) return false;
      if (CategorySuggestion != other.CategorySuggestion) return false;
      if (NominationType != other.NominationType) return false;
      if (DeveloperId != other.DeveloperId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (LongDescription.Length != 0) hash ^= LongDescription.GetHashCode();
      if (LatE6 != 0) hash ^= LatE6.GetHashCode();
      if (LngE6 != 0) hash ^= LngE6.GetHashCode();
      if (SupportingStatement.Length != 0) hash ^= SupportingStatement.GetHashCode();
      if (AsyncFileUpload != false) hash ^= AsyncFileUpload.GetHashCode();
      hash ^= playerSubmittedCategoryIds_.GetHashCode();
      if (CategorySuggestion.Length != 0) hash ^= CategorySuggestion.GetHashCode();
      if (NominationType != 0) hash ^= NominationType.GetHashCode();
      if (DeveloperId.Length != 0) hash ^= DeveloperId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Title.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (LongDescription.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LongDescription);
      }
      if (LatE6 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(LatE6);
      }
      if (LngE6 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(LngE6);
      }
      if (SupportingStatement.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(SupportingStatement);
      }
      if (AsyncFileUpload != false) {
        output.WriteRawTag(144, 1);
        output.WriteBool(AsyncFileUpload);
      }
      playerSubmittedCategoryIds_.WriteTo(output, _repeated_playerSubmittedCategoryIds_codec);
      if (CategorySuggestion.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(CategorySuggestion);
      }
      if (NominationType != 0) {
        output.WriteRawTag(168, 1);
        output.WriteEnum((int) NominationType);
      }
      if (DeveloperId.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(DeveloperId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (LongDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LongDescription);
      }
      if (LatE6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LatE6);
      }
      if (LngE6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LngE6);
      }
      if (SupportingStatement.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SupportingStatement);
      }
      if (AsyncFileUpload != false) {
        size += 2 + 1;
      }
      size += playerSubmittedCategoryIds_.CalculateSize(_repeated_playerSubmittedCategoryIds_codec);
      if (CategorySuggestion.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CategorySuggestion);
      }
      if (NominationType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) NominationType);
      }
      if (DeveloperId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DeveloperId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmitNewPoiProto other) {
      if (other == null) {
        return;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.LongDescription.Length != 0) {
        LongDescription = other.LongDescription;
      }
      if (other.LatE6 != 0) {
        LatE6 = other.LatE6;
      }
      if (other.LngE6 != 0) {
        LngE6 = other.LngE6;
      }
      if (other.SupportingStatement.Length != 0) {
        SupportingStatement = other.SupportingStatement;
      }
      if (other.AsyncFileUpload != false) {
        AsyncFileUpload = other.AsyncFileUpload;
      }
      playerSubmittedCategoryIds_.Add(other.playerSubmittedCategoryIds_);
      if (other.CategorySuggestion.Length != 0) {
        CategorySuggestion = other.CategorySuggestion;
      }
      if (other.NominationType != 0) {
        NominationType = other.NominationType;
      }
      if (other.DeveloperId.Length != 0) {
        DeveloperId = other.DeveloperId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 18: {
            LongDescription = input.ReadString();
            break;
          }
          case 32: {
            LatE6 = input.ReadInt32();
            break;
          }
          case 40: {
            LngE6 = input.ReadInt32();
            break;
          }
          case 114: {
            SupportingStatement = input.ReadString();
            break;
          }
          case 144: {
            AsyncFileUpload = input.ReadBool();
            break;
          }
          case 154: {
            playerSubmittedCategoryIds_.AddEntriesFrom(input, _repeated_playerSubmittedCategoryIds_codec);
            break;
          }
          case 162: {
            CategorySuggestion = input.ReadString();
            break;
          }
          case 168: {
            nominationType_ = (global::Niantic.ARDK.Uploader.Protos.NominationType) input.ReadEnum();
            break;
          }
          case 178: {
            DeveloperId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Response for a new poi submission
  /// </summary>
  public sealed partial class SubmitNewPoiOutProto : pb::IMessage<SubmitNewPoiOutProto> {
    private static readonly pb::MessageParser<SubmitNewPoiOutProto> _parser = new pb::MessageParser<SubmitNewPoiOutProto>(() => new SubmitNewPoiOutProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmitNewPoiOutProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitNewPoiOutProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitNewPoiOutProto(SubmitNewPoiOutProto other) : this() {
      status_ = other.status_;
      submissionId_ = other.submissionId_;
      messages_ = other.messages_.Clone();
      poiId_ = other.poiId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitNewPoiOutProto Clone() {
      return new SubmitNewPoiOutProto(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Niantic.ARDK.Uploader.Protos.SubmitNewPoiOutProto.Types.Status status_ = 0;
    /// <summary>
    ///  Indicates whether the operation was successful.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.Uploader.Protos.SubmitNewPoiOutProto.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "submission_id" field.</summary>
    public const int SubmissionIdFieldNumber = 2;
    private string submissionId_ = "";
    /// <summary>
    ///  If use async image upload mode, returning this id for client to track uploads.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubmissionId {
      get { return submissionId_; }
      set {
        submissionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "messages" field.</summary>
    public const int MessagesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_messages_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> messages_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///  User-facing messages; should not expose confidential operating details. Intended for e.g.
    ///  validation error details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Messages {
      get { return messages_; }
    }

    /// <summary>Field number for the "poi_id" field.</summary>
    public const int PoiIdFieldNumber = 4;
    private string poiId_ = "";
    /// <summary>
    ///  populated for provisional nominations
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PoiId {
      get { return poiId_; }
      set {
        poiId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmitNewPoiOutProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmitNewPoiOutProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (SubmissionId != other.SubmissionId) return false;
      if(!messages_.Equals(other.messages_)) return false;
      if (PoiId != other.PoiId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (SubmissionId.Length != 0) hash ^= SubmissionId.GetHashCode();
      hash ^= messages_.GetHashCode();
      if (PoiId.Length != 0) hash ^= PoiId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (SubmissionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SubmissionId);
      }
      messages_.WriteTo(output, _repeated_messages_codec);
      if (PoiId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PoiId);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (SubmissionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubmissionId);
      }
      size += messages_.CalculateSize(_repeated_messages_codec);
      if (PoiId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PoiId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmitNewPoiOutProto other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.SubmissionId.Length != 0) {
        SubmissionId = other.SubmissionId;
      }
      messages_.Add(other.messages_);
      if (other.PoiId.Length != 0) {
        PoiId = other.PoiId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            status_ = (global::Niantic.ARDK.Uploader.Protos.SubmitNewPoiOutProto.Types.Status) input.ReadEnum();
            break;
          }
          case 18: {
            SubmissionId = input.ReadString();
            break;
          }
          case 26: {
            messages_.AddEntriesFrom(input, _repeated_messages_codec);
            break;
          }
          case 34: {
            PoiId = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SubmitNewPoiOutProto message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("FAILURE")] Failure = 2,
        [pbr::OriginalName("INTERNAL_ERROR")] InternalError = 3,
        [pbr::OriginalName("TOO_MANY_RECENT_SUBMISSIONS")] TooManyRecentSubmissions = 4,
        [pbr::OriginalName("INVALID_INPUT")] InvalidInput = 5,
        [pbr::OriginalName("MINOR")] Minor = 6,
        /// <summary>
        ///  Only on client side, poi submission is not available by location etc..
        /// </summary>
        [pbr::OriginalName("NOT_AVAILABLE")] NotAvailable = 7,
      }

    }
    #endregion

  }

  public sealed partial class SubmitPoiImageProto : pb::IMessage<SubmitPoiImageProto> {
    private static readonly pb::MessageParser<SubmitPoiImageProto> _parser = new pb::MessageParser<SubmitPoiImageProto>(() => new SubmitPoiImageProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmitPoiImageProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitPoiImageProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitPoiImageProto(SubmitPoiImageProto other) : this() {
      poiId_ = other.poiId_;
      asyncFileUpload_ = other.asyncFileUpload_;
      nominationType_ = other.nominationType_;
      developerId_ = other.developerId_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitPoiImageProto Clone() {
      return new SubmitPoiImageProto(this);
    }

    /// <summary>Field number for the "poi_id" field.</summary>
    public const int PoiIdFieldNumber = 1;
    private string poiId_ = "";
    /// <summary>
    ///  The POI ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PoiId {
      get { return poiId_; }
      set {
        poiId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "async_file_upload" field.</summary>
    public const int AsyncFileUploadFieldNumber = 2;
    private bool asyncFileUpload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AsyncFileUpload {
      get { return asyncFileUpload_; }
      set {
        asyncFileUpload_ = value;
      }
    }

    /// <summary>Field number for the "nomination_type" field.</summary>
    public const int NominationTypeFieldNumber = 21;
    private global::Niantic.ARDK.Uploader.Protos.NominationType nominationType_ = 0;
    /// <summary>
    ///  equals PROVISIONAL if the submitted image is associated with a provisional wayspot
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.Uploader.Protos.NominationType NominationType {
      get { return nominationType_; }
      set {
        nominationType_ = value;
      }
    }

    /// <summary>Field number for the "developer_id" field.</summary>
    public const int DeveloperIdFieldNumber = 3;
    private string developerId_ = "";
    /// <summary>
    ///  might be different from player_id who submit the request, (eg. 8th wall account uid)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeveloperId {
      get { return developerId_; }
      set {
        developerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmitPoiImageProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmitPoiImageProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PoiId != other.PoiId) return false;
      if (AsyncFileUpload != other.AsyncFileUpload) return false;
      if (NominationType != other.NominationType) return false;
      if (DeveloperId != other.DeveloperId) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PoiId.Length != 0) hash ^= PoiId.GetHashCode();
      if (AsyncFileUpload != false) hash ^= AsyncFileUpload.GetHashCode();
      if (NominationType != 0) hash ^= NominationType.GetHashCode();
      if (DeveloperId.Length != 0) hash ^= DeveloperId.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PoiId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PoiId);
      }
      if (AsyncFileUpload != false) {
        output.WriteRawTag(16);
        output.WriteBool(AsyncFileUpload);
      }
      if (DeveloperId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeveloperId);
      }
      if (NominationType != 0) {
        output.WriteRawTag(168, 1);
        output.WriteEnum((int) NominationType);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PoiId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PoiId);
      }
      if (AsyncFileUpload != false) {
        size += 1 + 1;
      }
      if (NominationType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) NominationType);
      }
      if (DeveloperId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeveloperId);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmitPoiImageProto other) {
      if (other == null) {
        return;
      }
      if (other.PoiId.Length != 0) {
        PoiId = other.PoiId;
      }
      if (other.AsyncFileUpload != false) {
        AsyncFileUpload = other.AsyncFileUpload;
      }
      if (other.NominationType != 0) {
        NominationType = other.NominationType;
      }
      if (other.DeveloperId.Length != 0) {
        DeveloperId = other.DeveloperId;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            PoiId = input.ReadString();
            break;
          }
          case 16: {
            AsyncFileUpload = input.ReadBool();
            break;
          }
          case 26: {
            DeveloperId = input.ReadString();
            break;
          }
          case 168: {
            nominationType_ = (global::Niantic.ARDK.Uploader.Protos.NominationType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubmitPoiTextMetadataUpdateProto : pb::IMessage<SubmitPoiTextMetadataUpdateProto> {
    private static readonly pb::MessageParser<SubmitPoiTextMetadataUpdateProto> _parser = new pb::MessageParser<SubmitPoiTextMetadataUpdateProto>(() => new SubmitPoiTextMetadataUpdateProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmitPoiTextMetadataUpdateProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitPoiTextMetadataUpdateProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitPoiTextMetadataUpdateProto(SubmitPoiTextMetadataUpdateProto other) : this() {
      poiId_ = other.poiId_;
      title_ = other.title_;
      description_ = other.description_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitPoiTextMetadataUpdateProto Clone() {
      return new SubmitPoiTextMetadataUpdateProto(this);
    }

    /// <summary>Field number for the "poi_id" field.</summary>
    public const int PoiIdFieldNumber = 1;
    private string poiId_ = "";
    /// <summary>
    ///  The POI ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PoiId {
      get { return poiId_; }
      set {
        poiId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    /// <summary>
    ///  New title
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    ///  New description
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmitPoiTextMetadataUpdateProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmitPoiTextMetadataUpdateProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PoiId != other.PoiId) return false;
      if (Title != other.Title) return false;
      if (Description != other.Description) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PoiId.Length != 0) hash ^= PoiId.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PoiId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PoiId);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PoiId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PoiId);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmitPoiTextMetadataUpdateProto other) {
      if (other == null) {
        return;
      }
      if (other.PoiId.Length != 0) {
        PoiId = other.PoiId;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            PoiId = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubmitPoiCategoryVoteRecordProto : pb::IMessage<SubmitPoiCategoryVoteRecordProto> {
    private static readonly pb::MessageParser<SubmitPoiCategoryVoteRecordProto> _parser = new pb::MessageParser<SubmitPoiCategoryVoteRecordProto>(() => new SubmitPoiCategoryVoteRecordProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmitPoiCategoryVoteRecordProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitPoiCategoryVoteRecordProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitPoiCategoryVoteRecordProto(SubmitPoiCategoryVoteRecordProto other) : this() {
      poiId_ = other.poiId_;
      playerSubmittedCategoryIds_ = other.playerSubmittedCategoryIds_.Clone();
      categorySuggestion_ = other.categorySuggestion_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitPoiCategoryVoteRecordProto Clone() {
      return new SubmitPoiCategoryVoteRecordProto(this);
    }

    /// <summary>Field number for the "poi_id" field.</summary>
    public const int PoiIdFieldNumber = 1;
    private string poiId_ = "";
    /// <summary>
    ///  The POI ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PoiId {
      get { return poiId_; }
      set {
        poiId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_submitted_category_ids" field.</summary>
    public const int PlayerSubmittedCategoryIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_playerSubmittedCategoryIds_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> playerSubmittedCategoryIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///  player submitted categories ids
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> PlayerSubmittedCategoryIds {
      get { return playerSubmittedCategoryIds_; }
    }

    /// <summary>Field number for the "category_suggestion" field.</summary>
    public const int CategorySuggestionFieldNumber = 3;
    private string categorySuggestion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CategorySuggestion {
      get { return categorySuggestion_; }
      set {
        categorySuggestion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmitPoiCategoryVoteRecordProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmitPoiCategoryVoteRecordProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PoiId != other.PoiId) return false;
      if(!playerSubmittedCategoryIds_.Equals(other.playerSubmittedCategoryIds_)) return false;
      if (CategorySuggestion != other.CategorySuggestion) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PoiId.Length != 0) hash ^= PoiId.GetHashCode();
      hash ^= playerSubmittedCategoryIds_.GetHashCode();
      if (CategorySuggestion.Length != 0) hash ^= CategorySuggestion.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PoiId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PoiId);
      }
      playerSubmittedCategoryIds_.WriteTo(output, _repeated_playerSubmittedCategoryIds_codec);
      if (CategorySuggestion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CategorySuggestion);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PoiId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PoiId);
      }
      size += playerSubmittedCategoryIds_.CalculateSize(_repeated_playerSubmittedCategoryIds_codec);
      if (CategorySuggestion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CategorySuggestion);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmitPoiCategoryVoteRecordProto other) {
      if (other == null) {
        return;
      }
      if (other.PoiId.Length != 0) {
        PoiId = other.PoiId;
      }
      playerSubmittedCategoryIds_.Add(other.playerSubmittedCategoryIds_);
      if (other.CategorySuggestion.Length != 0) {
        CategorySuggestion = other.CategorySuggestion;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            PoiId = input.ReadString();
            break;
          }
          case 18: {
            playerSubmittedCategoryIds_.AddEntriesFrom(input, _repeated_playerSubmittedCategoryIds_codec);
            break;
          }
          case 26: {
            CategorySuggestion = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubmitPoiLocationUpdateProto : pb::IMessage<SubmitPoiLocationUpdateProto> {
    private static readonly pb::MessageParser<SubmitPoiLocationUpdateProto> _parser = new pb::MessageParser<SubmitPoiLocationUpdateProto>(() => new SubmitPoiLocationUpdateProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmitPoiLocationUpdateProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitPoiLocationUpdateProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitPoiLocationUpdateProto(SubmitPoiLocationUpdateProto other) : this() {
      poiId_ = other.poiId_;
      Location = other.location_ != null ? other.Location.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitPoiLocationUpdateProto Clone() {
      return new SubmitPoiLocationUpdateProto(this);
    }

    /// <summary>Field number for the "poi_id" field.</summary>
    public const int PoiIdFieldNumber = 1;
    private string poiId_ = "";
    /// <summary>
    ///  The POI ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PoiId {
      get { return poiId_; }
      set {
        poiId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    private global::Niantic.ARDK.Uploader.Protos.LocationE6Proto location_;
    /// <summary>
    ///  The proposed location to move the POI to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.Uploader.Protos.LocationE6Proto Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmitPoiLocationUpdateProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmitPoiLocationUpdateProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PoiId != other.PoiId) return false;
      if (!object.Equals(Location, other.Location)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PoiId.Length != 0) hash ^= PoiId.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PoiId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PoiId);
      }
      if (location_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PoiId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PoiId);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmitPoiLocationUpdateProto other) {
      if (other == null) {
        return;
      }
      if (other.PoiId.Length != 0) {
        PoiId = other.PoiId;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          location_ = new global::Niantic.ARDK.Uploader.Protos.LocationE6Proto();
        }
        Location.MergeFrom(other.Location);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            PoiId = input.ReadString();
            break;
          }
          case 18: {
            if (location_ == null) {
              location_ = new global::Niantic.ARDK.Uploader.Protos.LocationE6Proto();
            }
            input.ReadMessage(location_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubmitPoiTakedownRequestProto : pb::IMessage<SubmitPoiTakedownRequestProto> {
    private static readonly pb::MessageParser<SubmitPoiTakedownRequestProto> _parser = new pb::MessageParser<SubmitPoiTakedownRequestProto>(() => new SubmitPoiTakedownRequestProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmitPoiTakedownRequestProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitPoiTakedownRequestProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitPoiTakedownRequestProto(SubmitPoiTakedownRequestProto other) : this() {
      poiId_ = other.poiId_;
      invalidReason_ = other.invalidReason_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitPoiTakedownRequestProto Clone() {
      return new SubmitPoiTakedownRequestProto(this);
    }

    /// <summary>Field number for the "poi_id" field.</summary>
    public const int PoiIdFieldNumber = 1;
    private string poiId_ = "";
    /// <summary>
    ///  POI ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PoiId {
      get { return poiId_; }
      set {
        poiId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "invalid_reason" field.</summary>
    public const int InvalidReasonFieldNumber = 2;
    private global::Niantic.ARDK.Uploader.Protos.PoiInvalidReason invalidReason_ = 0;
    /// <summary>
    ///  Reason for the takedown request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.Uploader.Protos.PoiInvalidReason InvalidReason {
      get { return invalidReason_; }
      set {
        invalidReason_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmitPoiTakedownRequestProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmitPoiTakedownRequestProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PoiId != other.PoiId) return false;
      if (InvalidReason != other.InvalidReason) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PoiId.Length != 0) hash ^= PoiId.GetHashCode();
      if (InvalidReason != 0) hash ^= InvalidReason.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PoiId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PoiId);
      }
      if (InvalidReason != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) InvalidReason);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PoiId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PoiId);
      }
      if (InvalidReason != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InvalidReason);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmitPoiTakedownRequestProto other) {
      if (other == null) {
        return;
      }
      if (other.PoiId.Length != 0) {
        PoiId = other.PoiId;
      }
      if (other.InvalidReason != 0) {
        InvalidReason = other.InvalidReason;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            PoiId = input.ReadString();
            break;
          }
          case 16: {
            invalidReason_ = (global::Niantic.ARDK.Uploader.Protos.PoiInvalidReason) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  currently the same as SubmitPoiLocationUpdateProto
  ///  but in a separate proto in case sponsor location update
  ///  needs different fields in the future
  /// </summary>
  public sealed partial class SubmitSponsorPoiLocationUpdateProto : pb::IMessage<SubmitSponsorPoiLocationUpdateProto> {
    private static readonly pb::MessageParser<SubmitSponsorPoiLocationUpdateProto> _parser = new pb::MessageParser<SubmitSponsorPoiLocationUpdateProto>(() => new SubmitSponsorPoiLocationUpdateProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmitSponsorPoiLocationUpdateProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitSponsorPoiLocationUpdateProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitSponsorPoiLocationUpdateProto(SubmitSponsorPoiLocationUpdateProto other) : this() {
      poiId_ = other.poiId_;
      Location = other.location_ != null ? other.Location.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitSponsorPoiLocationUpdateProto Clone() {
      return new SubmitSponsorPoiLocationUpdateProto(this);
    }

    /// <summary>Field number for the "poi_id" field.</summary>
    public const int PoiIdFieldNumber = 1;
    private string poiId_ = "";
    /// <summary>
    ///  The POI ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PoiId {
      get { return poiId_; }
      set {
        poiId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    private global::Niantic.ARDK.Uploader.Protos.LocationE6Proto location_;
    /// <summary>
    ///  The proposed location to move the POI to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.Uploader.Protos.LocationE6Proto Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmitSponsorPoiLocationUpdateProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmitSponsorPoiLocationUpdateProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PoiId != other.PoiId) return false;
      if (!object.Equals(Location, other.Location)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PoiId.Length != 0) hash ^= PoiId.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PoiId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PoiId);
      }
      if (location_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PoiId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PoiId);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmitSponsorPoiLocationUpdateProto other) {
      if (other == null) {
        return;
      }
      if (other.PoiId.Length != 0) {
        PoiId = other.PoiId;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          location_ = new global::Niantic.ARDK.Uploader.Protos.LocationE6Proto();
        }
        Location.MergeFrom(other.Location);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            PoiId = input.ReadString();
            break;
          }
          case 18: {
            if (location_ == null) {
              location_ = new global::Niantic.ARDK.Uploader.Protos.LocationE6Proto();
            }
            input.ReadMessage(location_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubmitSponsorPoiReportProto : pb::IMessage<SubmitSponsorPoiReportProto> {
    private static readonly pb::MessageParser<SubmitSponsorPoiReportProto> _parser = new pb::MessageParser<SubmitSponsorPoiReportProto>(() => new SubmitSponsorPoiReportProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubmitSponsorPoiReportProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitSponsorPoiReportProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitSponsorPoiReportProto(SubmitSponsorPoiReportProto other) : this() {
      poiId_ = other.poiId_;
      invalidReason_ = other.invalidReason_;
      additionalDetails_ = other.additionalDetails_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubmitSponsorPoiReportProto Clone() {
      return new SubmitSponsorPoiReportProto(this);
    }

    /// <summary>Field number for the "poi_id" field.</summary>
    public const int PoiIdFieldNumber = 1;
    private string poiId_ = "";
    /// <summary>
    ///  The POI ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PoiId {
      get { return poiId_; }
      set {
        poiId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "invalid_reason" field.</summary>
    public const int InvalidReasonFieldNumber = 2;
    private global::Niantic.ARDK.Uploader.Protos.SponsorPoiInvalidReason invalidReason_ = 0;
    /// <summary>
    ///  Reason for the takedown request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.Uploader.Protos.SponsorPoiInvalidReason InvalidReason {
      get { return invalidReason_; }
      set {
        invalidReason_ = value;
      }
    }

    /// <summary>Field number for the "additional_details" field.</summary>
    public const int AdditionalDetailsFieldNumber = 3;
    private string additionalDetails_ = "";
    /// <summary>
    ///  additional details, needed for NOT_TRUEFUL,
    ///  NOT_FAMILY_FRIENDLY, OFFENSIVE_CONTENT
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AdditionalDetails {
      get { return additionalDetails_; }
      set {
        additionalDetails_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubmitSponsorPoiReportProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubmitSponsorPoiReportProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PoiId != other.PoiId) return false;
      if (InvalidReason != other.InvalidReason) return false;
      if (AdditionalDetails != other.AdditionalDetails) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PoiId.Length != 0) hash ^= PoiId.GetHashCode();
      if (InvalidReason != 0) hash ^= InvalidReason.GetHashCode();
      if (AdditionalDetails.Length != 0) hash ^= AdditionalDetails.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PoiId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PoiId);
      }
      if (InvalidReason != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) InvalidReason);
      }
      if (AdditionalDetails.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AdditionalDetails);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PoiId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PoiId);
      }
      if (InvalidReason != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) InvalidReason);
      }
      if (AdditionalDetails.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AdditionalDetails);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubmitSponsorPoiReportProto other) {
      if (other == null) {
        return;
      }
      if (other.PoiId.Length != 0) {
        PoiId = other.PoiId;
      }
      if (other.InvalidReason != 0) {
        InvalidReason = other.InvalidReason;
      }
      if (other.AdditionalDetails.Length != 0) {
        AdditionalDetails = other.AdditionalDetails;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            PoiId = input.ReadString();
            break;
          }
          case 16: {
            invalidReason_ = (global::Niantic.ARDK.Uploader.Protos.SponsorPoiInvalidReason) input.ReadEnum();
            break;
          }
          case 26: {
            AdditionalDetails = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PoiVideoSubmissionMetadataProto : pb::IMessage<PoiVideoSubmissionMetadataProto> {
    private static readonly pb::MessageParser<PoiVideoSubmissionMetadataProto> _parser = new pb::MessageParser<PoiVideoSubmissionMetadataProto>(() => new PoiVideoSubmissionMetadataProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PoiVideoSubmissionMetadataProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PoiVideoSubmissionMetadataProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PoiVideoSubmissionMetadataProto(PoiVideoSubmissionMetadataProto other) : this() {
      poiId_ = other.poiId_;
      Location = other.location_ != null ? other.Location.Clone() : null;
      playerLevel_ = other.playerLevel_;
      userType_ = other.userType_;
      isPrivate_ = other.isPrivate_;
      geographicCoverage_ = other.geographicCoverage_;
      builtForm_ = other.builtForm_.Clone();
      scanTags_ = other.scanTags_.Clone();
      developerId_ = other.developerId_;
      ArCommonMetadata = other.arCommonMetadata_ != null ? other.ArCommonMetadata.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PoiVideoSubmissionMetadataProto Clone() {
      return new PoiVideoSubmissionMetadataProto(this);
    }

    /// <summary>Field number for the "poi_id" field.</summary>
    public const int PoiIdFieldNumber = 1;
    private string poiId_ = "";
    /// <summary>
    ///  id of the poi
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PoiId {
      get { return poiId_; }
      set {
        poiId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    private global::Niantic.ARDK.Uploader.Protos.LocationE6Proto location_;
    /// <summary>
    ///  The location where the player was when the video was uploaded
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.Uploader.Protos.LocationE6Proto Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "player_level" field.</summary>
    public const int PlayerLevelFieldNumber = 3;
    private int playerLevel_;
    /// <summary>
    ///  Player's game level as specified in integer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerLevel {
      get { return playerLevel_; }
      set {
        playerLevel_ = value;
      }
    }

    /// <summary>Field number for the "user_type" field.</summary>
    public const int UserTypeFieldNumber = 4;
    private global::Niantic.ARDK.Uploader.Protos.UserType userType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.Uploader.Protos.UserType UserType {
      get { return userType_; }
      set {
        userType_ = value;
      }
    }

    /// <summary>Field number for the "is_private" field.</summary>
    public const int IsPrivateFieldNumber = 5;
    private bool isPrivate_;
    /// <summary>
    ///  only developers can submit private scans
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPrivate {
      get { return isPrivate_; }
      set {
        isPrivate_ = value;
      }
    }

    /// <summary>Field number for the "geographic_coverage" field.</summary>
    public const int GeographicCoverageFieldNumber = 6;
    private string geographicCoverage_ = "";
    /// <summary>
    ///  only surveyors can submit a single geographic_coverage type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GeographicCoverage {
      get { return geographicCoverage_; }
      set {
        geographicCoverage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "built_form" field.</summary>
    public const int BuiltFormFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_builtForm_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> builtForm_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///  only surveyors can submit built_form types (at least 1 but not more than 3)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> BuiltForm {
      get { return builtForm_; }
    }

    /// <summary>Field number for the "scan_tags" field.</summary>
    public const int ScanTagsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Niantic.ARDK.Uploader.Protos.ScanTag> _repeated_scanTags_codec
        = pb::FieldCodec.ForEnum(66, x => (int) x, x => (global::Niantic.ARDK.Uploader.Protos.ScanTag) x);
    private readonly pbc::RepeatedField<global::Niantic.ARDK.Uploader.Protos.ScanTag> scanTags_ = new pbc::RepeatedField<global::Niantic.ARDK.Uploader.Protos.ScanTag>();
    /// <summary>
    ///  Current Valid Concepts:
    ///  [DEFAULT_SCAN] - Wayspot centric scans coming in from games e.g. pgo; submitted by players.
    ///  [PUBLIC, WAYSPOT_CENTRIC] - submitted by developers/surveyors.
    ///  [PUBLIC, FREE_FORM] - submitted by developers/surveyors.
    ///  [PRIVATE, WAYSPOT_CENTRIC] - submitted by a developer.
    ///  [PRIVATE, FREE_FORM] - submitted by a developer.
    ///  [PUBLIC, FREE_FORM, EXPERIMENTAL] - submitted by a surveyor.
    ///  [PUBLIC, WAYSPOT_CENTRIC, EXPERIMENTAL] - submitted by a surveyor.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Niantic.ARDK.Uploader.Protos.ScanTag> ScanTags {
      get { return scanTags_; }
    }

    /// <summary>Field number for the "developer_id" field.</summary>
    public const int DeveloperIdFieldNumber = 11;
    private string developerId_ = "";
    /// <summary>
    ///  might be different from player_id who submit the request, (eg. 8th wall account uid)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeveloperId {
      get { return developerId_; }
      set {
        developerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ar_common_metadata" field.</summary>
    public const int ArCommonMetadataFieldNumber = 12;
    private global::Niantic.ARDK.AR.Protobuf.ARCommonMetadata arCommonMetadata_;
    /// <summary>
    ///  Metadata for scans submitted through the ARDK scanning framework
    ///  not populated for non-scanning framework uses
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.AR.Protobuf.ARCommonMetadata ArCommonMetadata {
      get { return arCommonMetadata_; }
      set {
        arCommonMetadata_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PoiVideoSubmissionMetadataProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PoiVideoSubmissionMetadataProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PoiId != other.PoiId) return false;
      if (!object.Equals(Location, other.Location)) return false;
      if (PlayerLevel != other.PlayerLevel) return false;
      if (UserType != other.UserType) return false;
      if (IsPrivate != other.IsPrivate) return false;
      if (GeographicCoverage != other.GeographicCoverage) return false;
      if(!builtForm_.Equals(other.builtForm_)) return false;
      if(!scanTags_.Equals(other.scanTags_)) return false;
      if (DeveloperId != other.DeveloperId) return false;
      if (!object.Equals(ArCommonMetadata, other.ArCommonMetadata)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PoiId.Length != 0) hash ^= PoiId.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      if (PlayerLevel != 0) hash ^= PlayerLevel.GetHashCode();
      if (UserType != 0) hash ^= UserType.GetHashCode();
      if (IsPrivate != false) hash ^= IsPrivate.GetHashCode();
      if (GeographicCoverage.Length != 0) hash ^= GeographicCoverage.GetHashCode();
      hash ^= builtForm_.GetHashCode();
      hash ^= scanTags_.GetHashCode();
      if (DeveloperId.Length != 0) hash ^= DeveloperId.GetHashCode();
      if (arCommonMetadata_ != null) hash ^= ArCommonMetadata.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PoiId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PoiId);
      }
      if (location_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
      if (PlayerLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PlayerLevel);
      }
      if (UserType != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) UserType);
      }
      if (IsPrivate != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsPrivate);
      }
      if (GeographicCoverage.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(GeographicCoverage);
      }
      builtForm_.WriteTo(output, _repeated_builtForm_codec);
      scanTags_.WriteTo(output, _repeated_scanTags_codec);
      if (DeveloperId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(DeveloperId);
      }
      if (arCommonMetadata_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(ArCommonMetadata);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PoiId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PoiId);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (PlayerLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerLevel);
      }
      if (UserType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) UserType);
      }
      if (IsPrivate != false) {
        size += 1 + 1;
      }
      if (GeographicCoverage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GeographicCoverage);
      }
      size += builtForm_.CalculateSize(_repeated_builtForm_codec);
      size += scanTags_.CalculateSize(_repeated_scanTags_codec);
      if (DeveloperId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeveloperId);
      }
      if (arCommonMetadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArCommonMetadata);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PoiVideoSubmissionMetadataProto other) {
      if (other == null) {
        return;
      }
      if (other.PoiId.Length != 0) {
        PoiId = other.PoiId;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          location_ = new global::Niantic.ARDK.Uploader.Protos.LocationE6Proto();
        }
        Location.MergeFrom(other.Location);
      }
      if (other.PlayerLevel != 0) {
        PlayerLevel = other.PlayerLevel;
      }
      if (other.UserType != 0) {
        UserType = other.UserType;
      }
      if (other.IsPrivate != false) {
        IsPrivate = other.IsPrivate;
      }
      if (other.GeographicCoverage.Length != 0) {
        GeographicCoverage = other.GeographicCoverage;
      }
      builtForm_.Add(other.builtForm_);
      scanTags_.Add(other.scanTags_);
      if (other.DeveloperId.Length != 0) {
        DeveloperId = other.DeveloperId;
      }
      if (other.arCommonMetadata_ != null) {
        if (arCommonMetadata_ == null) {
          arCommonMetadata_ = new global::Niantic.ARDK.AR.Protobuf.ARCommonMetadata();
        }
        ArCommonMetadata.MergeFrom(other.ArCommonMetadata);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            PoiId = input.ReadString();
            break;
          }
          case 18: {
            if (location_ == null) {
              location_ = new global::Niantic.ARDK.Uploader.Protos.LocationE6Proto();
            }
            input.ReadMessage(location_);
            break;
          }
          case 24: {
            PlayerLevel = input.ReadInt32();
            break;
          }
          case 32: {
            userType_ = (global::Niantic.ARDK.Uploader.Protos.UserType) input.ReadEnum();
            break;
          }
          case 40: {
            IsPrivate = input.ReadBool();
            break;
          }
          case 50: {
            GeographicCoverage = input.ReadString();
            break;
          }
          case 58: {
            builtForm_.AddEntriesFrom(input, _repeated_builtForm_codec);
            break;
          }
          case 66:
          case 64: {
            scanTags_.AddEntriesFrom(input, _repeated_scanTags_codec);
            break;
          }
          case 90: {
            DeveloperId = input.ReadString();
            break;
          }
          case 98: {
            if (arCommonMetadata_ == null) {
              arCommonMetadata_ = new global::Niantic.ARDK.AR.Protobuf.ARCommonMetadata();
            }
            input.ReadMessage(arCommonMetadata_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerSubmissionResponseProto : pb::IMessage<PlayerSubmissionResponseProto> {
    private static readonly pb::MessageParser<PlayerSubmissionResponseProto> _parser = new pb::MessageParser<PlayerSubmissionResponseProto>(() => new PlayerSubmissionResponseProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerSubmissionResponseProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerSubmissionResponseProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerSubmissionResponseProto(PlayerSubmissionResponseProto other) : this() {
      status_ = other.status_;
      submissionId_ = other.submissionId_;
      messages_ = other.messages_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerSubmissionResponseProto Clone() {
      return new PlayerSubmissionResponseProto(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionResponseProto.Types.Status status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionResponseProto.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "submission_id" field.</summary>
    public const int SubmissionIdFieldNumber = 2;
    private string submissionId_ = "";
    /// <summary>
    ///  If submission uses async file upload mode, returning this id for client to track uploads.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubmissionId {
      get { return submissionId_; }
      set {
        submissionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "messages" field.</summary>
    public const int MessagesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_messages_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> messages_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///  User-facing messages; should not expose confidential operating details. Intended for e.g.
    ///  validation error details.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Messages {
      get { return messages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerSubmissionResponseProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerSubmissionResponseProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (SubmissionId != other.SubmissionId) return false;
      if(!messages_.Equals(other.messages_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (SubmissionId.Length != 0) hash ^= SubmissionId.GetHashCode();
      hash ^= messages_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (SubmissionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SubmissionId);
      }
      messages_.WriteTo(output, _repeated_messages_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (SubmissionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubmissionId);
      }
      size += messages_.CalculateSize(_repeated_messages_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerSubmissionResponseProto other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.SubmissionId.Length != 0) {
        SubmissionId = other.SubmissionId;
      }
      messages_.Add(other.messages_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            status_ = (global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionResponseProto.Types.Status) input.ReadEnum();
            break;
          }
          case 18: {
            SubmissionId = input.ReadString();
            break;
          }
          case 26: {
            messages_.AddEntriesFrom(input, _repeated_messages_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PlayerSubmissionResponseProto message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        [pbr::OriginalName("STATUS_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        ///  The edit request was successfully submitted
        /// </summary>
        [pbr::OriginalName("SUCCESS")] Success = 1,
        /// <summary>
        ///  The edit request could not be submitted due to an internal error
        /// </summary>
        [pbr::OriginalName("INTERNAL_ERROR")] InternalError = 2,
        /// <summary>
        ///  The edit request could not be submitted because the user has made too many recent requests
        /// </summary>
        [pbr::OriginalName("TOO_MANY_RECENT_SUBMISSIONS")] TooManyRecentSubmissions = 3,
        /// <summary>
        ///  The edit request could not be submitted because the player is a minor
        /// </summary>
        [pbr::OriginalName("MINOR")] Minor = 4,
        /// <summary>
        ///  Edit requests are currently not available to this player in this location
        /// </summary>
        [pbr::OriginalName("NOT_AVAILABLE")] NotAvailable = 5,
        /// <summary>
        ///  The edit request could not be submitted due to a problem with the input or poi
        /// </summary>
        [pbr::OriginalName("INVALID_INPUT")] InvalidInput = 6,
        /// <summary>
        ///  The edit request could not be submitted because the uploaded image could not be found
        /// </summary>
        [pbr::OriginalName("MISSING_IMAGE")] MissingImage = 7,
        /// <summary>
        ///  The edit request could not be submitted because the player is too far from poi
        ///  This check is on the game server end
        /// </summary>
        [pbr::OriginalName("DISTANCE_VALIDATION_FAILED")] DistanceValidationFailed = 8,
      }

    }
    #endregion

  }

  /// <summary>
  ///  a request to get number of available submissions, sent from client to promenade
  /// </summary>
  public sealed partial class GetAvailableSubmissionsProto : pb::IMessage<GetAvailableSubmissionsProto> {
    private static readonly pb::MessageParser<GetAvailableSubmissionsProto> _parser = new pb::MessageParser<GetAvailableSubmissionsProto>(() => new GetAvailableSubmissionsProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAvailableSubmissionsProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableSubmissionsProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableSubmissionsProto(GetAvailableSubmissionsProto other) : this() {
      submissionType_ = other.submissionType_;
      submissionTypes_ = other.submissionTypes_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableSubmissionsProto Clone() {
      return new GetAvailableSubmissionsProto(this);
    }

    /// <summary>Field number for the "submission_type" field.</summary>
    public const int SubmissionTypeFieldNumber = 1;
    private global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionTypeProto submissionType_ = 0;
    /// <summary>
    ///  The type of submission for this request.
    ///  Deprecated, please use submission_types.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionTypeProto SubmissionType {
      get { return submissionType_; }
      set {
        submissionType_ = value;
      }
    }

    /// <summary>Field number for the "submission_types" field.</summary>
    public const int SubmissionTypesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionTypeProto> _repeated_submissionTypes_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionTypeProto) x);
    private readonly pbc::RepeatedField<global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionTypeProto> submissionTypes_ = new pbc::RepeatedField<global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionTypeProto>();
    /// <summary>
    ///  List of submission types for availability checking
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionTypeProto> SubmissionTypes {
      get { return submissionTypes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAvailableSubmissionsProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAvailableSubmissionsProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubmissionType != other.SubmissionType) return false;
      if(!submissionTypes_.Equals(other.submissionTypes_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SubmissionType != 0) hash ^= SubmissionType.GetHashCode();
      hash ^= submissionTypes_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SubmissionType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SubmissionType);
      }
      submissionTypes_.WriteTo(output, _repeated_submissionTypes_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SubmissionType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SubmissionType);
      }
      size += submissionTypes_.CalculateSize(_repeated_submissionTypes_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAvailableSubmissionsProto other) {
      if (other == null) {
        return;
      }
      if (other.SubmissionType != 0) {
        SubmissionType = other.SubmissionType;
      }
      submissionTypes_.Add(other.submissionTypes_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            submissionType_ = (global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionTypeProto) input.ReadEnum();
            break;
          }
          case 18:
          case 16: {
            submissionTypes_.AddEntriesFrom(input, _repeated_submissionTypes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAvailableSubmissionsOutProto : pb::IMessage<GetAvailableSubmissionsOutProto> {
    private static readonly pb::MessageParser<GetAvailableSubmissionsOutProto> _parser = new pb::MessageParser<GetAvailableSubmissionsOutProto>(() => new GetAvailableSubmissionsOutProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAvailableSubmissionsOutProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableSubmissionsOutProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableSubmissionsOutProto(GetAvailableSubmissionsOutProto other) : this() {
      submissionsLeft_ = other.submissionsLeft_;
      minPlayerLevel_ = other.minPlayerLevel_;
      hasValidEmail_ = other.hasValidEmail_;
      isFeatureEnabled_ = other.isFeatureEnabled_;
      timeWindowForSubmissionsLimitMs_ = other.timeWindowForSubmissionsLimitMs_;
      maxPoiDistanceInMeters_ = other.maxPoiDistanceInMeters_;
      blacklistedOs_ = other.blacklistedOs_.Clone();
      availabilityResultPerType_ = other.availabilityResultPerType_.Clone();
      blacklistedDeviceId_ = other.blacklistedDeviceId_.Clone();
      maxPoiLocationEditMoveDistanceMeters_ = other.maxPoiLocationEditMoveDistanceMeters_;
      isUploadLaterEnabled_ = other.isUploadLaterEnabled_;
      categoryCloudStorageDirectoryPath_ = other.categoryCloudStorageDirectoryPath_;
      urbanTypologyCloudStoragePath_ = other.urbanTypologyCloudStoragePath_;
      hasWayfarerAccount_ = other.hasWayfarerAccount_;
      passedWayfarerQuiz_ = other.passedWayfarerQuiz_;
      isPoiSubmissionCategoryEnabled_ = other.isPoiSubmissionCategoryEnabled_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAvailableSubmissionsOutProto Clone() {
      return new GetAvailableSubmissionsOutProto(this);
    }

    /// <summary>Field number for the "submissions_left" field.</summary>
    public const int SubmissionsLeftFieldNumber = 1;
    private int submissionsLeft_;
    /// <summary>
    ///  Deprecated, please use availability_result_per_type.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubmissionsLeft {
      get { return submissionsLeft_; }
      set {
        submissionsLeft_ = value;
      }
    }

    /// <summary>Field number for the "min_player_level" field.</summary>
    public const int MinPlayerLevelFieldNumber = 2;
    private int minPlayerLevel_;
    /// <summary>
    ///  Deprecated, please use availability_result_per_type.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinPlayerLevel {
      get { return minPlayerLevel_; }
      set {
        minPlayerLevel_ = value;
      }
    }

    /// <summary>Field number for the "has_valid_email" field.</summary>
    public const int HasValidEmailFieldNumber = 3;
    private bool hasValidEmail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasValidEmail {
      get { return hasValidEmail_; }
      set {
        hasValidEmail_ = value;
      }
    }

    /// <summary>Field number for the "is_feature_enabled" field.</summary>
    public const int IsFeatureEnabledFieldNumber = 4;
    private bool isFeatureEnabled_;
    /// <summary>
    ///  Deprecated, please use availability_result_per_type.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFeatureEnabled {
      get { return isFeatureEnabled_; }
      set {
        isFeatureEnabled_ = value;
      }
    }

    /// <summary>Field number for the "time_window_for_submissions_limit_ms" field.</summary>
    public const int TimeWindowForSubmissionsLimitMsFieldNumber = 5;
    private long timeWindowForSubmissionsLimitMs_;
    /// <summary>
    ///  Deprecated, please use availability_result_per_type.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TimeWindowForSubmissionsLimitMs {
      get { return timeWindowForSubmissionsLimitMs_; }
      set {
        timeWindowForSubmissionsLimitMs_ = value;
      }
    }

    /// <summary>Field number for the "max_poi_distance_in_meters" field.</summary>
    public const int MaxPoiDistanceInMetersFieldNumber = 6;
    private int maxPoiDistanceInMeters_;
    /// <summary>
    ///  Deprecated, please use availability_result_per_type.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxPoiDistanceInMeters {
      get { return maxPoiDistanceInMeters_; }
      set {
        maxPoiDistanceInMeters_ = value;
      }
    }

    /// <summary>Field number for the "blacklisted_os" field.</summary>
    public const int BlacklistedOsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_blacklistedOs_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> blacklistedOs_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///  Deprecated, please use availability_result_per_type.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> BlacklistedOs {
      get { return blacklistedOs_; }
    }

    /// <summary>Field number for the "availability_result_per_type" field.</summary>
    public const int AvailabilityResultPerTypeFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Niantic.ARDK.Uploader.Protos.AvailableSubmissionsPerSubmissionType> _repeated_availabilityResultPerType_codec
        = pb::FieldCodec.ForMessage(66, global::Niantic.ARDK.Uploader.Protos.AvailableSubmissionsPerSubmissionType.Parser);
    private readonly pbc::RepeatedField<global::Niantic.ARDK.Uploader.Protos.AvailableSubmissionsPerSubmissionType> availabilityResultPerType_ = new pbc::RepeatedField<global::Niantic.ARDK.Uploader.Protos.AvailableSubmissionsPerSubmissionType>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Niantic.ARDK.Uploader.Protos.AvailableSubmissionsPerSubmissionType> AvailabilityResultPerType {
      get { return availabilityResultPerType_; }
    }

    /// <summary>Field number for the "blacklisted_device_id" field.</summary>
    public const int BlacklistedDeviceIdFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_blacklistedDeviceId_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> blacklistedDeviceId_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///  Deprecated, please use availability_result_per_type.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> BlacklistedDeviceId {
      get { return blacklistedDeviceId_; }
    }

    /// <summary>Field number for the "max_poi_location_edit_move_distance_meters" field.</summary>
    public const int MaxPoiLocationEditMoveDistanceMetersFieldNumber = 10;
    private int maxPoiLocationEditMoveDistanceMeters_;
    /// <summary>
    ///  Titan settings to validate the edit location is not too far from the POI
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxPoiLocationEditMoveDistanceMeters {
      get { return maxPoiLocationEditMoveDistanceMeters_; }
      set {
        maxPoiLocationEditMoveDistanceMeters_ = value;
      }
    }

    /// <summary>Field number for the "is_upload_later_enabled" field.</summary>
    public const int IsUploadLaterEnabledFieldNumber = 11;
    private bool isUploadLaterEnabled_;
    /// <summary>
    ///  Deprecated, please use availability_result_per_type.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsUploadLaterEnabled {
      get { return isUploadLaterEnabled_; }
      set {
        isUploadLaterEnabled_ = value;
      }
    }

    /// <summary>Field number for the "category_cloud_storage_directory_path" field.</summary>
    public const int CategoryCloudStorageDirectoryPathFieldNumber = 12;
    private string categoryCloudStorageDirectoryPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CategoryCloudStorageDirectoryPath {
      get { return categoryCloudStorageDirectoryPath_; }
      set {
        categoryCloudStorageDirectoryPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "urban_typology_cloud_storage_path" field.</summary>
    public const int UrbanTypologyCloudStoragePathFieldNumber = 16;
    private string urbanTypologyCloudStoragePath_ = "";
    /// <summary>
    ///  public gcs path for urban typology file
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UrbanTypologyCloudStoragePath {
      get { return urbanTypologyCloudStoragePath_; }
      set {
        urbanTypologyCloudStoragePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "has_wayfarer_account" field.</summary>
    public const int HasWayfarerAccountFieldNumber = 13;
    private bool hasWayfarerAccount_;
    /// <summary>
    ///  true if player has a wayfarer account
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasWayfarerAccount {
      get { return hasWayfarerAccount_; }
      set {
        hasWayfarerAccount_ = value;
      }
    }

    /// <summary>Field number for the "passed_wayfarer_quiz" field.</summary>
    public const int PassedWayfarerQuizFieldNumber = 15;
    private bool passedWayfarerQuiz_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PassedWayfarerQuiz {
      get { return passedWayfarerQuiz_; }
      set {
        passedWayfarerQuiz_ = value;
      }
    }

    /// <summary>Field number for the "is_poi_submission_category_enabled" field.</summary>
    public const int IsPoiSubmissionCategoryEnabledFieldNumber = 14;
    private bool isPoiSubmissionCategoryEnabled_;
    /// <summary>
    ///  true if client should allow category submission during a poi nomination
    ///  can be deprecated once this flow is always on by default
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPoiSubmissionCategoryEnabled {
      get { return isPoiSubmissionCategoryEnabled_; }
      set {
        isPoiSubmissionCategoryEnabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAvailableSubmissionsOutProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAvailableSubmissionsOutProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubmissionsLeft != other.SubmissionsLeft) return false;
      if (MinPlayerLevel != other.MinPlayerLevel) return false;
      if (HasValidEmail != other.HasValidEmail) return false;
      if (IsFeatureEnabled != other.IsFeatureEnabled) return false;
      if (TimeWindowForSubmissionsLimitMs != other.TimeWindowForSubmissionsLimitMs) return false;
      if (MaxPoiDistanceInMeters != other.MaxPoiDistanceInMeters) return false;
      if(!blacklistedOs_.Equals(other.blacklistedOs_)) return false;
      if(!availabilityResultPerType_.Equals(other.availabilityResultPerType_)) return false;
      if(!blacklistedDeviceId_.Equals(other.blacklistedDeviceId_)) return false;
      if (MaxPoiLocationEditMoveDistanceMeters != other.MaxPoiLocationEditMoveDistanceMeters) return false;
      if (IsUploadLaterEnabled != other.IsUploadLaterEnabled) return false;
      if (CategoryCloudStorageDirectoryPath != other.CategoryCloudStorageDirectoryPath) return false;
      if (UrbanTypologyCloudStoragePath != other.UrbanTypologyCloudStoragePath) return false;
      if (HasWayfarerAccount != other.HasWayfarerAccount) return false;
      if (PassedWayfarerQuiz != other.PassedWayfarerQuiz) return false;
      if (IsPoiSubmissionCategoryEnabled != other.IsPoiSubmissionCategoryEnabled) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SubmissionsLeft != 0) hash ^= SubmissionsLeft.GetHashCode();
      if (MinPlayerLevel != 0) hash ^= MinPlayerLevel.GetHashCode();
      if (HasValidEmail != false) hash ^= HasValidEmail.GetHashCode();
      if (IsFeatureEnabled != false) hash ^= IsFeatureEnabled.GetHashCode();
      if (TimeWindowForSubmissionsLimitMs != 0L) hash ^= TimeWindowForSubmissionsLimitMs.GetHashCode();
      if (MaxPoiDistanceInMeters != 0) hash ^= MaxPoiDistanceInMeters.GetHashCode();
      hash ^= blacklistedOs_.GetHashCode();
      hash ^= availabilityResultPerType_.GetHashCode();
      hash ^= blacklistedDeviceId_.GetHashCode();
      if (MaxPoiLocationEditMoveDistanceMeters != 0) hash ^= MaxPoiLocationEditMoveDistanceMeters.GetHashCode();
      if (IsUploadLaterEnabled != false) hash ^= IsUploadLaterEnabled.GetHashCode();
      if (CategoryCloudStorageDirectoryPath.Length != 0) hash ^= CategoryCloudStorageDirectoryPath.GetHashCode();
      if (UrbanTypologyCloudStoragePath.Length != 0) hash ^= UrbanTypologyCloudStoragePath.GetHashCode();
      if (HasWayfarerAccount != false) hash ^= HasWayfarerAccount.GetHashCode();
      if (PassedWayfarerQuiz != false) hash ^= PassedWayfarerQuiz.GetHashCode();
      if (IsPoiSubmissionCategoryEnabled != false) hash ^= IsPoiSubmissionCategoryEnabled.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SubmissionsLeft != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SubmissionsLeft);
      }
      if (MinPlayerLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MinPlayerLevel);
      }
      if (HasValidEmail != false) {
        output.WriteRawTag(24);
        output.WriteBool(HasValidEmail);
      }
      if (IsFeatureEnabled != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsFeatureEnabled);
      }
      if (TimeWindowForSubmissionsLimitMs != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TimeWindowForSubmissionsLimitMs);
      }
      if (MaxPoiDistanceInMeters != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MaxPoiDistanceInMeters);
      }
      blacklistedOs_.WriteTo(output, _repeated_blacklistedOs_codec);
      availabilityResultPerType_.WriteTo(output, _repeated_availabilityResultPerType_codec);
      blacklistedDeviceId_.WriteTo(output, _repeated_blacklistedDeviceId_codec);
      if (MaxPoiLocationEditMoveDistanceMeters != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(MaxPoiLocationEditMoveDistanceMeters);
      }
      if (IsUploadLaterEnabled != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsUploadLaterEnabled);
      }
      if (CategoryCloudStorageDirectoryPath.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(CategoryCloudStorageDirectoryPath);
      }
      if (HasWayfarerAccount != false) {
        output.WriteRawTag(104);
        output.WriteBool(HasWayfarerAccount);
      }
      if (IsPoiSubmissionCategoryEnabled != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsPoiSubmissionCategoryEnabled);
      }
      if (PassedWayfarerQuiz != false) {
        output.WriteRawTag(120);
        output.WriteBool(PassedWayfarerQuiz);
      }
      if (UrbanTypologyCloudStoragePath.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(UrbanTypologyCloudStoragePath);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SubmissionsLeft != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubmissionsLeft);
      }
      if (MinPlayerLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinPlayerLevel);
      }
      if (HasValidEmail != false) {
        size += 1 + 1;
      }
      if (IsFeatureEnabled != false) {
        size += 1 + 1;
      }
      if (TimeWindowForSubmissionsLimitMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimeWindowForSubmissionsLimitMs);
      }
      if (MaxPoiDistanceInMeters != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPoiDistanceInMeters);
      }
      size += blacklistedOs_.CalculateSize(_repeated_blacklistedOs_codec);
      size += availabilityResultPerType_.CalculateSize(_repeated_availabilityResultPerType_codec);
      size += blacklistedDeviceId_.CalculateSize(_repeated_blacklistedDeviceId_codec);
      if (MaxPoiLocationEditMoveDistanceMeters != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPoiLocationEditMoveDistanceMeters);
      }
      if (IsUploadLaterEnabled != false) {
        size += 1 + 1;
      }
      if (CategoryCloudStorageDirectoryPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CategoryCloudStorageDirectoryPath);
      }
      if (UrbanTypologyCloudStoragePath.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UrbanTypologyCloudStoragePath);
      }
      if (HasWayfarerAccount != false) {
        size += 1 + 1;
      }
      if (PassedWayfarerQuiz != false) {
        size += 1 + 1;
      }
      if (IsPoiSubmissionCategoryEnabled != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAvailableSubmissionsOutProto other) {
      if (other == null) {
        return;
      }
      if (other.SubmissionsLeft != 0) {
        SubmissionsLeft = other.SubmissionsLeft;
      }
      if (other.MinPlayerLevel != 0) {
        MinPlayerLevel = other.MinPlayerLevel;
      }
      if (other.HasValidEmail != false) {
        HasValidEmail = other.HasValidEmail;
      }
      if (other.IsFeatureEnabled != false) {
        IsFeatureEnabled = other.IsFeatureEnabled;
      }
      if (other.TimeWindowForSubmissionsLimitMs != 0L) {
        TimeWindowForSubmissionsLimitMs = other.TimeWindowForSubmissionsLimitMs;
      }
      if (other.MaxPoiDistanceInMeters != 0) {
        MaxPoiDistanceInMeters = other.MaxPoiDistanceInMeters;
      }
      blacklistedOs_.Add(other.blacklistedOs_);
      availabilityResultPerType_.Add(other.availabilityResultPerType_);
      blacklistedDeviceId_.Add(other.blacklistedDeviceId_);
      if (other.MaxPoiLocationEditMoveDistanceMeters != 0) {
        MaxPoiLocationEditMoveDistanceMeters = other.MaxPoiLocationEditMoveDistanceMeters;
      }
      if (other.IsUploadLaterEnabled != false) {
        IsUploadLaterEnabled = other.IsUploadLaterEnabled;
      }
      if (other.CategoryCloudStorageDirectoryPath.Length != 0) {
        CategoryCloudStorageDirectoryPath = other.CategoryCloudStorageDirectoryPath;
      }
      if (other.UrbanTypologyCloudStoragePath.Length != 0) {
        UrbanTypologyCloudStoragePath = other.UrbanTypologyCloudStoragePath;
      }
      if (other.HasWayfarerAccount != false) {
        HasWayfarerAccount = other.HasWayfarerAccount;
      }
      if (other.PassedWayfarerQuiz != false) {
        PassedWayfarerQuiz = other.PassedWayfarerQuiz;
      }
      if (other.IsPoiSubmissionCategoryEnabled != false) {
        IsPoiSubmissionCategoryEnabled = other.IsPoiSubmissionCategoryEnabled;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            SubmissionsLeft = input.ReadInt32();
            break;
          }
          case 16: {
            MinPlayerLevel = input.ReadInt32();
            break;
          }
          case 24: {
            HasValidEmail = input.ReadBool();
            break;
          }
          case 32: {
            IsFeatureEnabled = input.ReadBool();
            break;
          }
          case 40: {
            TimeWindowForSubmissionsLimitMs = input.ReadInt64();
            break;
          }
          case 48: {
            MaxPoiDistanceInMeters = input.ReadInt32();
            break;
          }
          case 58: {
            blacklistedOs_.AddEntriesFrom(input, _repeated_blacklistedOs_codec);
            break;
          }
          case 66: {
            availabilityResultPerType_.AddEntriesFrom(input, _repeated_availabilityResultPerType_codec);
            break;
          }
          case 74: {
            blacklistedDeviceId_.AddEntriesFrom(input, _repeated_blacklistedDeviceId_codec);
            break;
          }
          case 80: {
            MaxPoiLocationEditMoveDistanceMeters = input.ReadInt32();
            break;
          }
          case 88: {
            IsUploadLaterEnabled = input.ReadBool();
            break;
          }
          case 98: {
            CategoryCloudStorageDirectoryPath = input.ReadString();
            break;
          }
          case 104: {
            HasWayfarerAccount = input.ReadBool();
            break;
          }
          case 112: {
            IsPoiSubmissionCategoryEnabled = input.ReadBool();
            break;
          }
          case 120: {
            PassedWayfarerQuiz = input.ReadBool();
            break;
          }
          case 130: {
            UrbanTypologyCloudStoragePath = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AvailableSubmissionsPerSubmissionType : pb::IMessage<AvailableSubmissionsPerSubmissionType> {
    private static readonly pb::MessageParser<AvailableSubmissionsPerSubmissionType> _parser = new pb::MessageParser<AvailableSubmissionsPerSubmissionType>(() => new AvailableSubmissionsPerSubmissionType());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AvailableSubmissionsPerSubmissionType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailableSubmissionsPerSubmissionType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailableSubmissionsPerSubmissionType(AvailableSubmissionsPerSubmissionType other) : this() {
      playerSubmissionType_ = other.playerSubmissionType_;
      submissionsLeft_ = other.submissionsLeft_;
      minPlayerLevel_ = other.minPlayerLevel_;
      isFeatureEnabled_ = other.isFeatureEnabled_;
      timeWindowForSubmissionsLimitMs_ = other.timeWindowForSubmissionsLimitMs_;
      maxPoiDistanceInMeters_ = other.maxPoiDistanceInMeters_;
      blacklistedOs_ = other.blacklistedOs_.Clone();
      blacklistedDeviceId_ = other.blacklistedDeviceId_.Clone();
      isWhitelistedUser_ = other.isWhitelistedUser_;
      isUploadLaterEnabled_ = other.isUploadLaterEnabled_;
      dailyNewSubmissions_ = other.dailyNewSubmissions_;
      maxSubmissions_ = other.maxSubmissions_;
      isWayfarerOnboardingEnabled_ = other.isWayfarerOnboardingEnabled_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AvailableSubmissionsPerSubmissionType Clone() {
      return new AvailableSubmissionsPerSubmissionType(this);
    }

    /// <summary>Field number for the "player_submission_type" field.</summary>
    public const int PlayerSubmissionTypeFieldNumber = 1;
    private global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionTypeProto playerSubmissionType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionTypeProto PlayerSubmissionType {
      get { return playerSubmissionType_; }
      set {
        playerSubmissionType_ = value;
      }
    }

    /// <summary>Field number for the "submissions_left" field.</summary>
    public const int SubmissionsLeftFieldNumber = 2;
    private int submissionsLeft_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubmissionsLeft {
      get { return submissionsLeft_; }
      set {
        submissionsLeft_ = value;
      }
    }

    /// <summary>Field number for the "min_player_level" field.</summary>
    public const int MinPlayerLevelFieldNumber = 3;
    private int minPlayerLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinPlayerLevel {
      get { return minPlayerLevel_; }
      set {
        minPlayerLevel_ = value;
      }
    }

    /// <summary>Field number for the "is_feature_enabled" field.</summary>
    public const int IsFeatureEnabledFieldNumber = 4;
    private bool isFeatureEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsFeatureEnabled {
      get { return isFeatureEnabled_; }
      set {
        isFeatureEnabled_ = value;
      }
    }

    /// <summary>Field number for the "time_window_for_submissions_limit_ms" field.</summary>
    public const int TimeWindowForSubmissionsLimitMsFieldNumber = 5;
    private long timeWindowForSubmissionsLimitMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TimeWindowForSubmissionsLimitMs {
      get { return timeWindowForSubmissionsLimitMs_; }
      set {
        timeWindowForSubmissionsLimitMs_ = value;
      }
    }

    /// <summary>Field number for the "max_poi_distance_in_meters" field.</summary>
    public const int MaxPoiDistanceInMetersFieldNumber = 6;
    private int maxPoiDistanceInMeters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxPoiDistanceInMeters {
      get { return maxPoiDistanceInMeters_; }
      set {
        maxPoiDistanceInMeters_ = value;
      }
    }

    /// <summary>Field number for the "blacklisted_os" field.</summary>
    public const int BlacklistedOsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_blacklistedOs_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> blacklistedOs_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> BlacklistedOs {
      get { return blacklistedOs_; }
    }

    /// <summary>Field number for the "blacklisted_device_id" field.</summary>
    public const int BlacklistedDeviceIdFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_blacklistedDeviceId_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> blacklistedDeviceId_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> BlacklistedDeviceId {
      get { return blacklistedDeviceId_; }
    }

    /// <summary>Field number for the "is_whitelisted_user" field.</summary>
    public const int IsWhitelistedUserFieldNumber = 9;
    private bool isWhitelistedUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsWhitelistedUser {
      get { return isWhitelistedUser_; }
      set {
        isWhitelistedUser_ = value;
      }
    }

    /// <summary>Field number for the "is_upload_later_enabled" field.</summary>
    public const int IsUploadLaterEnabledFieldNumber = 10;
    private bool isUploadLaterEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsUploadLaterEnabled {
      get { return isUploadLaterEnabled_; }
      set {
        isUploadLaterEnabled_ = value;
      }
    }

    /// <summary>Field number for the "daily_new_submissions" field.</summary>
    public const int DailyNewSubmissionsFieldNumber = 11;
    private float dailyNewSubmissions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float DailyNewSubmissions {
      get { return dailyNewSubmissions_; }
      set {
        dailyNewSubmissions_ = value;
      }
    }

    /// <summary>Field number for the "max_submissions" field.</summary>
    public const int MaxSubmissionsFieldNumber = 12;
    private int maxSubmissions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxSubmissions {
      get { return maxSubmissions_; }
      set {
        maxSubmissions_ = value;
      }
    }

    /// <summary>Field number for the "is_wayfarer_onboarding_enabled" field.</summary>
    public const int IsWayfarerOnboardingEnabledFieldNumber = 13;
    private bool isWayfarerOnboardingEnabled_;
    /// <summary>
    ///  true if client should use wayfarer onboarding flow
    ///  can be deprecated once we use the wayfarer onboarding flow by default
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsWayfarerOnboardingEnabled {
      get { return isWayfarerOnboardingEnabled_; }
      set {
        isWayfarerOnboardingEnabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AvailableSubmissionsPerSubmissionType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AvailableSubmissionsPerSubmissionType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerSubmissionType != other.PlayerSubmissionType) return false;
      if (SubmissionsLeft != other.SubmissionsLeft) return false;
      if (MinPlayerLevel != other.MinPlayerLevel) return false;
      if (IsFeatureEnabled != other.IsFeatureEnabled) return false;
      if (TimeWindowForSubmissionsLimitMs != other.TimeWindowForSubmissionsLimitMs) return false;
      if (MaxPoiDistanceInMeters != other.MaxPoiDistanceInMeters) return false;
      if(!blacklistedOs_.Equals(other.blacklistedOs_)) return false;
      if(!blacklistedDeviceId_.Equals(other.blacklistedDeviceId_)) return false;
      if (IsWhitelistedUser != other.IsWhitelistedUser) return false;
      if (IsUploadLaterEnabled != other.IsUploadLaterEnabled) return false;
      if (DailyNewSubmissions != other.DailyNewSubmissions) return false;
      if (MaxSubmissions != other.MaxSubmissions) return false;
      if (IsWayfarerOnboardingEnabled != other.IsWayfarerOnboardingEnabled) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerSubmissionType != 0) hash ^= PlayerSubmissionType.GetHashCode();
      if (SubmissionsLeft != 0) hash ^= SubmissionsLeft.GetHashCode();
      if (MinPlayerLevel != 0) hash ^= MinPlayerLevel.GetHashCode();
      if (IsFeatureEnabled != false) hash ^= IsFeatureEnabled.GetHashCode();
      if (TimeWindowForSubmissionsLimitMs != 0L) hash ^= TimeWindowForSubmissionsLimitMs.GetHashCode();
      if (MaxPoiDistanceInMeters != 0) hash ^= MaxPoiDistanceInMeters.GetHashCode();
      hash ^= blacklistedOs_.GetHashCode();
      hash ^= blacklistedDeviceId_.GetHashCode();
      if (IsWhitelistedUser != false) hash ^= IsWhitelistedUser.GetHashCode();
      if (IsUploadLaterEnabled != false) hash ^= IsUploadLaterEnabled.GetHashCode();
      if (DailyNewSubmissions != 0F) hash ^= DailyNewSubmissions.GetHashCode();
      if (MaxSubmissions != 0) hash ^= MaxSubmissions.GetHashCode();
      if (IsWayfarerOnboardingEnabled != false) hash ^= IsWayfarerOnboardingEnabled.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerSubmissionType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PlayerSubmissionType);
      }
      if (SubmissionsLeft != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SubmissionsLeft);
      }
      if (MinPlayerLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MinPlayerLevel);
      }
      if (IsFeatureEnabled != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsFeatureEnabled);
      }
      if (TimeWindowForSubmissionsLimitMs != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TimeWindowForSubmissionsLimitMs);
      }
      if (MaxPoiDistanceInMeters != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MaxPoiDistanceInMeters);
      }
      blacklistedOs_.WriteTo(output, _repeated_blacklistedOs_codec);
      blacklistedDeviceId_.WriteTo(output, _repeated_blacklistedDeviceId_codec);
      if (IsWhitelistedUser != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsWhitelistedUser);
      }
      if (IsUploadLaterEnabled != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsUploadLaterEnabled);
      }
      if (DailyNewSubmissions != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(DailyNewSubmissions);
      }
      if (MaxSubmissions != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(MaxSubmissions);
      }
      if (IsWayfarerOnboardingEnabled != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsWayfarerOnboardingEnabled);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerSubmissionType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PlayerSubmissionType);
      }
      if (SubmissionsLeft != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubmissionsLeft);
      }
      if (MinPlayerLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinPlayerLevel);
      }
      if (IsFeatureEnabled != false) {
        size += 1 + 1;
      }
      if (TimeWindowForSubmissionsLimitMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimeWindowForSubmissionsLimitMs);
      }
      if (MaxPoiDistanceInMeters != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPoiDistanceInMeters);
      }
      size += blacklistedOs_.CalculateSize(_repeated_blacklistedOs_codec);
      size += blacklistedDeviceId_.CalculateSize(_repeated_blacklistedDeviceId_codec);
      if (IsWhitelistedUser != false) {
        size += 1 + 1;
      }
      if (IsUploadLaterEnabled != false) {
        size += 1 + 1;
      }
      if (DailyNewSubmissions != 0F) {
        size += 1 + 4;
      }
      if (MaxSubmissions != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxSubmissions);
      }
      if (IsWayfarerOnboardingEnabled != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AvailableSubmissionsPerSubmissionType other) {
      if (other == null) {
        return;
      }
      if (other.PlayerSubmissionType != 0) {
        PlayerSubmissionType = other.PlayerSubmissionType;
      }
      if (other.SubmissionsLeft != 0) {
        SubmissionsLeft = other.SubmissionsLeft;
      }
      if (other.MinPlayerLevel != 0) {
        MinPlayerLevel = other.MinPlayerLevel;
      }
      if (other.IsFeatureEnabled != false) {
        IsFeatureEnabled = other.IsFeatureEnabled;
      }
      if (other.TimeWindowForSubmissionsLimitMs != 0L) {
        TimeWindowForSubmissionsLimitMs = other.TimeWindowForSubmissionsLimitMs;
      }
      if (other.MaxPoiDistanceInMeters != 0) {
        MaxPoiDistanceInMeters = other.MaxPoiDistanceInMeters;
      }
      blacklistedOs_.Add(other.blacklistedOs_);
      blacklistedDeviceId_.Add(other.blacklistedDeviceId_);
      if (other.IsWhitelistedUser != false) {
        IsWhitelistedUser = other.IsWhitelistedUser;
      }
      if (other.IsUploadLaterEnabled != false) {
        IsUploadLaterEnabled = other.IsUploadLaterEnabled;
      }
      if (other.DailyNewSubmissions != 0F) {
        DailyNewSubmissions = other.DailyNewSubmissions;
      }
      if (other.MaxSubmissions != 0) {
        MaxSubmissions = other.MaxSubmissions;
      }
      if (other.IsWayfarerOnboardingEnabled != false) {
        IsWayfarerOnboardingEnabled = other.IsWayfarerOnboardingEnabled;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            playerSubmissionType_ = (global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionTypeProto) input.ReadEnum();
            break;
          }
          case 16: {
            SubmissionsLeft = input.ReadInt32();
            break;
          }
          case 24: {
            MinPlayerLevel = input.ReadInt32();
            break;
          }
          case 32: {
            IsFeatureEnabled = input.ReadBool();
            break;
          }
          case 40: {
            TimeWindowForSubmissionsLimitMs = input.ReadInt64();
            break;
          }
          case 48: {
            MaxPoiDistanceInMeters = input.ReadInt32();
            break;
          }
          case 58: {
            blacklistedOs_.AddEntriesFrom(input, _repeated_blacklistedOs_codec);
            break;
          }
          case 66: {
            blacklistedDeviceId_.AddEntriesFrom(input, _repeated_blacklistedDeviceId_codec);
            break;
          }
          case 72: {
            IsWhitelistedUser = input.ReadBool();
            break;
          }
          case 80: {
            IsUploadLaterEnabled = input.ReadBool();
            break;
          }
          case 93: {
            DailyNewSubmissions = input.ReadFloat();
            break;
          }
          case 96: {
            MaxSubmissions = input.ReadInt32();
            break;
          }
          case 104: {
            IsWayfarerOnboardingEnabled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetUploadUrlProto : pb::IMessage<GetUploadUrlProto> {
    private static readonly pb::MessageParser<GetUploadUrlProto> _parser = new pb::MessageParser<GetUploadUrlProto>(() => new GetUploadUrlProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUploadUrlProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUploadUrlProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUploadUrlProto(GetUploadUrlProto other) : this() {
      userId_ = other.userId_;
      gameUniqueId_ = other.gameUniqueId_;
      submissionType_ = other.submissionType_;
      submissionId_ = other.submissionId_;
      imageContexts_ = other.imageContexts_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUploadUrlProto Clone() {
      return new GetUploadUrlProto(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    /// <summary>
    ///  TODO(jlin): remove these two fields, they are unused.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "game_unique_id" field.</summary>
    public const int GameUniqueIdFieldNumber = 2;
    private string gameUniqueId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameUniqueId {
      get { return gameUniqueId_; }
      set {
        gameUniqueId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "submission_type" field.</summary>
    public const int SubmissionTypeFieldNumber = 3;
    private global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionTypeProto submissionType_ = 0;
    /// <summary>
    ///  The type of submission the images are for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionTypeProto SubmissionType {
      get { return submissionType_; }
      set {
        submissionType_ = value;
      }
    }

    /// <summary>Field number for the "submission_id" field.</summary>
    public const int SubmissionIdFieldNumber = 4;
    private string submissionId_ = "";
    /// <summary>
    ///  A per-player unique ID for this submission. Used to associate uploaded images with submission
    ///  metadata.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubmissionId {
      get { return submissionId_; }
      set {
        submissionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image_contexts" field.</summary>
    public const int ImageContextsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_imageContexts_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> imageContexts_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///  The image contexts, used to distinguish and identify individual uploaded images for a
    ///  submission. One upload URL will be returned for each image context.
    ///
    ///  Requirements:
    ///  - must contain at least one image context
    ///  - image contexts in a single request may not contain duplicates. Image contexts across multiple
    ///    requests for the same submission may contain duplicates to allow for re-uploading of images.
    ///  - an image context may be empty
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ImageContexts {
      get { return imageContexts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUploadUrlProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUploadUrlProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (GameUniqueId != other.GameUniqueId) return false;
      if (SubmissionType != other.SubmissionType) return false;
      if (SubmissionId != other.SubmissionId) return false;
      if(!imageContexts_.Equals(other.imageContexts_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (GameUniqueId.Length != 0) hash ^= GameUniqueId.GetHashCode();
      if (SubmissionType != 0) hash ^= SubmissionType.GetHashCode();
      if (SubmissionId.Length != 0) hash ^= SubmissionId.GetHashCode();
      hash ^= imageContexts_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (GameUniqueId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GameUniqueId);
      }
      if (SubmissionType != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) SubmissionType);
      }
      if (SubmissionId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SubmissionId);
      }
      imageContexts_.WriteTo(output, _repeated_imageContexts_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (GameUniqueId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameUniqueId);
      }
      if (SubmissionType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SubmissionType);
      }
      if (SubmissionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubmissionId);
      }
      size += imageContexts_.CalculateSize(_repeated_imageContexts_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUploadUrlProto other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.GameUniqueId.Length != 0) {
        GameUniqueId = other.GameUniqueId;
      }
      if (other.SubmissionType != 0) {
        SubmissionType = other.SubmissionType;
      }
      if (other.SubmissionId.Length != 0) {
        SubmissionId = other.SubmissionId;
      }
      imageContexts_.Add(other.imageContexts_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            GameUniqueId = input.ReadString();
            break;
          }
          case 24: {
            submissionType_ = (global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionTypeProto) input.ReadEnum();
            break;
          }
          case 34: {
            SubmissionId = input.ReadString();
            break;
          }
          case 42: {
            imageContexts_.AddEntriesFrom(input, _repeated_imageContexts_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetUploadUrlOutProto : pb::IMessage<GetUploadUrlOutProto> {
    private static readonly pb::MessageParser<GetUploadUrlOutProto> _parser = new pb::MessageParser<GetUploadUrlOutProto>(() => new GetUploadUrlOutProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetUploadUrlOutProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUploadUrlOutProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUploadUrlOutProto(GetUploadUrlOutProto other) : this() {
      status_ = other.status_;
      signedUrl_ = other.signedUrl_;
      supportingImageSignedUrl_ = other.supportingImageSignedUrl_;
      contextSignedUrls_ = other.contextSignedUrls_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetUploadUrlOutProto Clone() {
      return new GetUploadUrlOutProto(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Niantic.ARDK.Uploader.Protos.GetUploadUrlOutProto.Types.Status status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.Uploader.Protos.GetUploadUrlOutProto.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "signed_url" field.</summary>
    public const int SignedUrlFieldNumber = 2;
    private string signedUrl_ = "";
    /// <summary>
    ///  Legacy for POI submissions, same as context_signed_urls['']
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SignedUrl {
      get { return signedUrl_; }
      set {
        signedUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "supporting_image_signed_url" field.</summary>
    public const int SupportingImageSignedUrlFieldNumber = 3;
    private string supportingImageSignedUrl_ = "";
    /// <summary>
    ///  Legacy for POI submissions, same as context_signed_urls['supporting']
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SupportingImageSignedUrl {
      get { return supportingImageSignedUrl_; }
      set {
        supportingImageSignedUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "context_signed_urls" field.</summary>
    public const int ContextSignedUrlsFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_contextSignedUrls_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> contextSignedUrls_ = new pbc::MapField<string, string>();
    /// <summary>
    ///  The image upload URLs, one for each image context in the request and keyed by image context.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> ContextSignedUrls {
      get { return contextSignedUrls_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetUploadUrlOutProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetUploadUrlOutProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (SignedUrl != other.SignedUrl) return false;
      if (SupportingImageSignedUrl != other.SupportingImageSignedUrl) return false;
      if (!ContextSignedUrls.Equals(other.ContextSignedUrls)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (SignedUrl.Length != 0) hash ^= SignedUrl.GetHashCode();
      if (SupportingImageSignedUrl.Length != 0) hash ^= SupportingImageSignedUrl.GetHashCode();
      hash ^= ContextSignedUrls.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (SignedUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SignedUrl);
      }
      if (SupportingImageSignedUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SupportingImageSignedUrl);
      }
      contextSignedUrls_.WriteTo(output, _map_contextSignedUrls_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (SignedUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SignedUrl);
      }
      if (SupportingImageSignedUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SupportingImageSignedUrl);
      }
      size += contextSignedUrls_.CalculateSize(_map_contextSignedUrls_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetUploadUrlOutProto other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.SignedUrl.Length != 0) {
        SignedUrl = other.SignedUrl;
      }
      if (other.SupportingImageSignedUrl.Length != 0) {
        SupportingImageSignedUrl = other.SupportingImageSignedUrl;
      }
      contextSignedUrls_.Add(other.contextSignedUrls_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            status_ = (global::Niantic.ARDK.Uploader.Protos.GetUploadUrlOutProto.Types.Status) input.ReadEnum();
            break;
          }
          case 18: {
            SignedUrl = input.ReadString();
            break;
          }
          case 26: {
            SupportingImageSignedUrl = input.ReadString();
            break;
          }
          case 34: {
            contextSignedUrls_.AddEntriesFrom(input, _map_contextSignedUrls_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetUploadUrlOutProto message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("FAILURES")] Failures = 1,
        [pbr::OriginalName("SUCCESS")] Success = 2,
        /// <summary>
        ///  The request did not contain any image contexts.
        /// </summary>
        [pbr::OriginalName("MISSING_IMAGE_CONTEXTS")] MissingImageContexts = 3,
        /// <summary>
        ///  The request had duplicated image contexts.
        /// </summary>
        [pbr::OriginalName("DUPLICATE_IMAGE_CONTEXTS")] DuplicateImageContexts = 4,
      }

    }
    #endregion

  }

  public sealed partial class UploadPoiPhotoByUrlProto : pb::IMessage<UploadPoiPhotoByUrlProto> {
    private static readonly pb::MessageParser<UploadPoiPhotoByUrlProto> _parser = new pb::MessageParser<UploadPoiPhotoByUrlProto>(() => new UploadPoiPhotoByUrlProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadPoiPhotoByUrlProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPoiPhotoByUrlProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPoiPhotoByUrlProto(UploadPoiPhotoByUrlProto other) : this() {
      requestId_ = other.requestId_;
      imageUrl_ = other.imageUrl_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPoiPhotoByUrlProto Clone() {
      return new UploadPoiPhotoByUrlProto(this);
    }

    /// <summary>Field number for the "request_id" field.</summary>
    public const int RequestIdFieldNumber = 1;
    private string requestId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RequestId {
      get { return requestId_; }
      set {
        requestId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image_url" field.</summary>
    public const int ImageUrlFieldNumber = 2;
    private string imageUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageUrl {
      get { return imageUrl_; }
      set {
        imageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadPoiPhotoByUrlProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadPoiPhotoByUrlProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RequestId != other.RequestId) return false;
      if (ImageUrl != other.ImageUrl) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RequestId.Length != 0) hash ^= RequestId.GetHashCode();
      if (ImageUrl.Length != 0) hash ^= ImageUrl.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RequestId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RequestId);
      }
      if (ImageUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ImageUrl);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RequestId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RequestId);
      }
      if (ImageUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUrl);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadPoiPhotoByUrlProto other) {
      if (other == null) {
        return;
      }
      if (other.RequestId.Length != 0) {
        RequestId = other.RequestId;
      }
      if (other.ImageUrl.Length != 0) {
        ImageUrl = other.ImageUrl;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            RequestId = input.ReadString();
            break;
          }
          case 18: {
            ImageUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PortalCurationImageResult : pb::IMessage<PortalCurationImageResult> {
    private static readonly pb::MessageParser<PortalCurationImageResult> _parser = new pb::MessageParser<PortalCurationImageResult>(() => new PortalCurationImageResult());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PortalCurationImageResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PortalCurationImageResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PortalCurationImageResult(PortalCurationImageResult other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PortalCurationImageResult Clone() {
      return new PortalCurationImageResult(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PortalCurationImageResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PortalCurationImageResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PortalCurationImageResult other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PortalCurationImageResult message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("FEATURE_DISABLED")] FeatureDisabled = 2,
        [pbr::OriginalName("ALREADY_UPLOADED")] AlreadyUploaded = 3,
        [pbr::OriginalName("IMAGE_NOT_FOUND")] ImageNotFound = 4,
        [pbr::OriginalName("IMAGE_TOO_BIG")] ImageTooBig = 5,
        [pbr::OriginalName("IMAGE_NOT_SERVABLE")] ImageNotServable = 6,
        [pbr::OriginalName("PORTAL_NOT_FOUND")] PortalNotFound = 7,
      }

    }
    #endregion

  }

  public sealed partial class UploadPoiPhotoByUrlOutProto : pb::IMessage<UploadPoiPhotoByUrlOutProto> {
    private static readonly pb::MessageParser<UploadPoiPhotoByUrlOutProto> _parser = new pb::MessageParser<UploadPoiPhotoByUrlOutProto>(() => new UploadPoiPhotoByUrlOutProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadPoiPhotoByUrlOutProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPoiPhotoByUrlOutProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPoiPhotoByUrlOutProto(UploadPoiPhotoByUrlOutProto other) : this() {
      status_ = other.status_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPoiPhotoByUrlOutProto Clone() {
      return new UploadPoiPhotoByUrlOutProto(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Niantic.ARDK.Uploader.Protos.PortalCurationImageResult.Types.Result status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.Uploader.Protos.PortalCurationImageResult.Types.Result Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadPoiPhotoByUrlOutProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadPoiPhotoByUrlOutProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadPoiPhotoByUrlOutProto other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            status_ = (global::Niantic.ARDK.Uploader.Protos.PortalCurationImageResult.Types.Result) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GenerateGmapSignedUrlProto : pb::IMessage<GenerateGmapSignedUrlProto> {
    private static readonly pb::MessageParser<GenerateGmapSignedUrlProto> _parser = new pb::MessageParser<GenerateGmapSignedUrlProto>(() => new GenerateGmapSignedUrlProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GenerateGmapSignedUrlProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateGmapSignedUrlProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateGmapSignedUrlProto(GenerateGmapSignedUrlProto other) : this() {
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      width_ = other.width_;
      height_ = other.height_;
      zoom_ = other.zoom_;
      languageCode_ = other.languageCode_;
      countryCode_ = other.countryCode_;
      mapStyle_ = other.mapStyle_;
      mapType_ = other.mapType_;
      iconParams_ = other.iconParams_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateGmapSignedUrlProto Clone() {
      return new GenerateGmapSignedUrlProto(this);
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 1;
    private double latitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 2;
    private double longitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 3;
    private int width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 4;
    private int height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "zoom" field.</summary>
    public const int ZoomFieldNumber = 5;
    private int zoom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Zoom {
      get { return zoom_; }
      set {
        zoom_ = value;
      }
    }

    /// <summary>Field number for the "languageCode" field.</summary>
    public const int LanguageCodeFieldNumber = 6;
    private string languageCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LanguageCode {
      get { return languageCode_; }
      set {
        languageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "countryCode" field.</summary>
    public const int CountryCodeFieldNumber = 7;
    private string countryCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CountryCode {
      get { return countryCode_; }
      set {
        countryCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mapStyle" field.</summary>
    public const int MapStyleFieldNumber = 8;
    private string mapStyle_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MapStyle {
      get { return mapStyle_; }
      set {
        mapStyle_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mapType" field.</summary>
    public const int MapTypeFieldNumber = 9;
    private string mapType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MapType {
      get { return mapType_; }
      set {
        mapType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "iconParams" field.</summary>
    public const int IconParamsFieldNumber = 10;
    private string iconParams_ = "";
    /// <summary>
    ///  TODO (caitlin): the following parameter is replaced by a server setting and should be removed
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IconParams {
      get { return iconParams_; }
      set {
        iconParams_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GenerateGmapSignedUrlProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GenerateGmapSignedUrlProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Latitude != other.Latitude) return false;
      if (Longitude != other.Longitude) return false;
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (Zoom != other.Zoom) return false;
      if (LanguageCode != other.LanguageCode) return false;
      if (CountryCode != other.CountryCode) return false;
      if (MapStyle != other.MapStyle) return false;
      if (MapType != other.MapType) return false;
      if (IconParams != other.IconParams) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Latitude != 0D) hash ^= Latitude.GetHashCode();
      if (Longitude != 0D) hash ^= Longitude.GetHashCode();
      if (Width != 0) hash ^= Width.GetHashCode();
      if (Height != 0) hash ^= Height.GetHashCode();
      if (Zoom != 0) hash ^= Zoom.GetHashCode();
      if (LanguageCode.Length != 0) hash ^= LanguageCode.GetHashCode();
      if (CountryCode.Length != 0) hash ^= CountryCode.GetHashCode();
      if (MapStyle.Length != 0) hash ^= MapStyle.GetHashCode();
      if (MapType.Length != 0) hash ^= MapType.GetHashCode();
      if (IconParams.Length != 0) hash ^= IconParams.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Latitude != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Longitude);
      }
      if (Width != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Width);
      }
      if (Height != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Height);
      }
      if (Zoom != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Zoom);
      }
      if (LanguageCode.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(LanguageCode);
      }
      if (CountryCode.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(CountryCode);
      }
      if (MapStyle.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(MapStyle);
      }
      if (MapType.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(MapType);
      }
      if (IconParams.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(IconParams);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Latitude != 0D) {
        size += 1 + 8;
      }
      if (Longitude != 0D) {
        size += 1 + 8;
      }
      if (Width != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
      }
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (Zoom != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Zoom);
      }
      if (LanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LanguageCode);
      }
      if (CountryCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CountryCode);
      }
      if (MapStyle.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MapStyle);
      }
      if (MapType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MapType);
      }
      if (IconParams.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconParams);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GenerateGmapSignedUrlProto other) {
      if (other == null) {
        return;
      }
      if (other.Latitude != 0D) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0D) {
        Longitude = other.Longitude;
      }
      if (other.Width != 0) {
        Width = other.Width;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      if (other.Zoom != 0) {
        Zoom = other.Zoom;
      }
      if (other.LanguageCode.Length != 0) {
        LanguageCode = other.LanguageCode;
      }
      if (other.CountryCode.Length != 0) {
        CountryCode = other.CountryCode;
      }
      if (other.MapStyle.Length != 0) {
        MapStyle = other.MapStyle;
      }
      if (other.MapType.Length != 0) {
        MapType = other.MapType;
      }
      if (other.IconParams.Length != 0) {
        IconParams = other.IconParams;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 9: {
            Latitude = input.ReadDouble();
            break;
          }
          case 17: {
            Longitude = input.ReadDouble();
            break;
          }
          case 24: {
            Width = input.ReadInt32();
            break;
          }
          case 32: {
            Height = input.ReadInt32();
            break;
          }
          case 40: {
            Zoom = input.ReadInt32();
            break;
          }
          case 50: {
            LanguageCode = input.ReadString();
            break;
          }
          case 58: {
            CountryCode = input.ReadString();
            break;
          }
          case 66: {
            MapStyle = input.ReadString();
            break;
          }
          case 74: {
            MapType = input.ReadString();
            break;
          }
          case 82: {
            IconParams = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GenerateGmapSignedUrlOutProto : pb::IMessage<GenerateGmapSignedUrlOutProto> {
    private static readonly pb::MessageParser<GenerateGmapSignedUrlOutProto> _parser = new pb::MessageParser<GenerateGmapSignedUrlOutProto>(() => new GenerateGmapSignedUrlOutProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GenerateGmapSignedUrlOutProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateGmapSignedUrlOutProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateGmapSignedUrlOutProto(GenerateGmapSignedUrlOutProto other) : this() {
      result_ = other.result_;
      signedUrl_ = other.signedUrl_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GenerateGmapSignedUrlOutProto Clone() {
      return new GenerateGmapSignedUrlOutProto(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::Niantic.ARDK.Uploader.Protos.GenerateGmapSignedUrlOutProto.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.Uploader.Protos.GenerateGmapSignedUrlOutProto.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "signed_url" field.</summary>
    public const int SignedUrlFieldNumber = 2;
    private string signedUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SignedUrl {
      get { return signedUrl_; }
      set {
        signedUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GenerateGmapSignedUrlOutProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GenerateGmapSignedUrlOutProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (SignedUrl != other.SignedUrl) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (SignedUrl.Length != 0) hash ^= SignedUrl.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (SignedUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SignedUrl);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (SignedUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SignedUrl);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GenerateGmapSignedUrlOutProto other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.SignedUrl.Length != 0) {
        SignedUrl = other.SignedUrl;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::Niantic.ARDK.Uploader.Protos.GenerateGmapSignedUrlOutProto.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            SignedUrl = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GenerateGmapSignedUrlOutProto message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("ERROR_PLAYER_NOT_VALID")] ErrorPlayerNotValid = 2,
        [pbr::OriginalName("ERROR_RATE_LIMITED")] ErrorRateLimited = 3,
        [pbr::OriginalName("ERROR_MISSING_INPUT")] ErrorMissingInput = 4,
        [pbr::OriginalName("ERROR_UNKNOWN")] ErrorUnknown = 5,
      }

    }
    #endregion

  }

  public sealed partial class GetGmapSettingsProto : pb::IMessage<GetGmapSettingsProto> {
    private static readonly pb::MessageParser<GetGmapSettingsProto> _parser = new pb::MessageParser<GetGmapSettingsProto>(() => new GetGmapSettingsProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetGmapSettingsProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGmapSettingsProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGmapSettingsProto(GetGmapSettingsProto other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGmapSettingsProto Clone() {
      return new GetGmapSettingsProto(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetGmapSettingsProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetGmapSettingsProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetGmapSettingsProto other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class GetGmapSettingsOutProto : pb::IMessage<GetGmapSettingsOutProto> {
    private static readonly pb::MessageParser<GetGmapSettingsOutProto> _parser = new pb::MessageParser<GetGmapSettingsOutProto>(() => new GetGmapSettingsOutProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetGmapSettingsOutProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGmapSettingsOutProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGmapSettingsOutProto(GetGmapSettingsOutProto other) : this() {
      result_ = other.result_;
      gmapTemplateUrl_ = other.gmapTemplateUrl_;
      maxPoiDistanceInMeters_ = other.maxPoiDistanceInMeters_;
      minZoom_ = other.minZoom_;
      maxZoom_ = other.maxZoom_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGmapSettingsOutProto Clone() {
      return new GetGmapSettingsOutProto(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::Niantic.ARDK.Uploader.Protos.GetGmapSettingsOutProto.Types.Result result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.Uploader.Protos.GetGmapSettingsOutProto.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "gmap_template_url" field.</summary>
    public const int GmapTemplateUrlFieldNumber = 2;
    private string gmapTemplateUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GmapTemplateUrl {
      get { return gmapTemplateUrl_; }
      set {
        gmapTemplateUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "max_poi_distance_in_meters" field.</summary>
    public const int MaxPoiDistanceInMetersFieldNumber = 3;
    private int maxPoiDistanceInMeters_;
    /// <summary>
    ///  TODO (hina) : this has been moved to GetAvailableSubmissionsOutProto and should be removed
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxPoiDistanceInMeters {
      get { return maxPoiDistanceInMeters_; }
      set {
        maxPoiDistanceInMeters_ = value;
      }
    }

    /// <summary>Field number for the "min_zoom" field.</summary>
    public const int MinZoomFieldNumber = 4;
    private int minZoom_;
    /// <summary>
    ///  min zoom for the map view; defaults to 0 if unset
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinZoom {
      get { return minZoom_; }
      set {
        minZoom_ = value;
      }
    }

    /// <summary>Field number for the "max_zoom" field.</summary>
    public const int MaxZoomFieldNumber = 5;
    private int maxZoom_;
    /// <summary>
    ///  max zoom for the map view; defaults to 0 if unset
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxZoom {
      get { return maxZoom_; }
      set {
        maxZoom_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetGmapSettingsOutProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetGmapSettingsOutProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (GmapTemplateUrl != other.GmapTemplateUrl) return false;
      if (MaxPoiDistanceInMeters != other.MaxPoiDistanceInMeters) return false;
      if (MinZoom != other.MinZoom) return false;
      if (MaxZoom != other.MaxZoom) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (GmapTemplateUrl.Length != 0) hash ^= GmapTemplateUrl.GetHashCode();
      if (MaxPoiDistanceInMeters != 0) hash ^= MaxPoiDistanceInMeters.GetHashCode();
      if (MinZoom != 0) hash ^= MinZoom.GetHashCode();
      if (MaxZoom != 0) hash ^= MaxZoom.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      if (GmapTemplateUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(GmapTemplateUrl);
      }
      if (MaxPoiDistanceInMeters != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(MaxPoiDistanceInMeters);
      }
      if (MinZoom != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(MinZoom);
      }
      if (MaxZoom != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(MaxZoom);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (GmapTemplateUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GmapTemplateUrl);
      }
      if (MaxPoiDistanceInMeters != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxPoiDistanceInMeters);
      }
      if (MinZoom != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinZoom);
      }
      if (MaxZoom != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxZoom);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetGmapSettingsOutProto other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.GmapTemplateUrl.Length != 0) {
        GmapTemplateUrl = other.GmapTemplateUrl;
      }
      if (other.MaxPoiDistanceInMeters != 0) {
        MaxPoiDistanceInMeters = other.MaxPoiDistanceInMeters;
      }
      if (other.MinZoom != 0) {
        MinZoom = other.MinZoom;
      }
      if (other.MaxZoom != 0) {
        MaxZoom = other.MaxZoom;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            result_ = (global::Niantic.ARDK.Uploader.Protos.GetGmapSettingsOutProto.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            GmapTemplateUrl = input.ReadString();
            break;
          }
          case 24: {
            MaxPoiDistanceInMeters = input.ReadInt32();
            break;
          }
          case 32: {
            MinZoom = input.ReadInt32();
            break;
          }
          case 40: {
            MaxZoom = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetGmapSettingsOutProto message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SUCCESS")] Success = 1,
        [pbr::OriginalName("ERROR_UNKNOWN")] ErrorUnknown = 2,
        [pbr::OriginalName("ERROR_MISSING_CONFIG")] ErrorMissingConfig = 3,
        [pbr::OriginalName("ERROR_NO_UNIQUE_ID")] ErrorNoUniqueId = 4,
      }

    }
    #endregion

  }

  public sealed partial class GetGrapeshotUploadUrlProto : pb::IMessage<GetGrapeshotUploadUrlProto> {
    private static readonly pb::MessageParser<GetGrapeshotUploadUrlProto> _parser = new pb::MessageParser<GetGrapeshotUploadUrlProto>(() => new GetGrapeshotUploadUrlProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetGrapeshotUploadUrlProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGrapeshotUploadUrlProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGrapeshotUploadUrlProto(GetGrapeshotUploadUrlProto other) : this() {
      submissionType_ = other.submissionType_;
      submissionId_ = other.submissionId_;
      fileUploadContext_ = other.fileUploadContext_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGrapeshotUploadUrlProto Clone() {
      return new GetGrapeshotUploadUrlProto(this);
    }

    /// <summary>Field number for the "submission_type" field.</summary>
    public const int SubmissionTypeFieldNumber = 1;
    private global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionTypeProto submissionType_ = 0;
    /// <summary>
    ///  The type of submission the uploaded files are for.
    ///  deprecated since client not sending submission type. It's stored on the server with submission id
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionTypeProto SubmissionType {
      get { return submissionType_; }
      set {
        submissionType_ = value;
      }
    }

    /// <summary>Field number for the "submission_id" field.</summary>
    public const int SubmissionIdFieldNumber = 2;
    private string submissionId_ = "";
    /// <summary>
    ///  A per-player unique ID for this submission. Used to associate uploaded file with submission
    ///  metadata.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubmissionId {
      get { return submissionId_; }
      set {
        submissionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "file_upload_context" field.</summary>
    public const int FileUploadContextFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_fileUploadContext_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> fileUploadContext_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///  The file context, used to distinguish and identify individual uploaded files for a
    ///  submission.
    ///
    ///  Context is required for the first time request for async upload per submission id.
    ///
    ///  Requirements:
    ///  - must contain at least one context
    ///  - file contexts in a single request may not contain duplicates. File contexts across multiple
    ///    requests for the same submission may contain duplicates to allow for re-uploading of files.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> FileUploadContext {
      get { return fileUploadContext_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetGrapeshotUploadUrlProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetGrapeshotUploadUrlProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubmissionType != other.SubmissionType) return false;
      if (SubmissionId != other.SubmissionId) return false;
      if(!fileUploadContext_.Equals(other.fileUploadContext_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SubmissionType != 0) hash ^= SubmissionType.GetHashCode();
      if (SubmissionId.Length != 0) hash ^= SubmissionId.GetHashCode();
      hash ^= fileUploadContext_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SubmissionType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SubmissionType);
      }
      if (SubmissionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SubmissionId);
      }
      fileUploadContext_.WriteTo(output, _repeated_fileUploadContext_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SubmissionType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SubmissionType);
      }
      if (SubmissionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubmissionId);
      }
      size += fileUploadContext_.CalculateSize(_repeated_fileUploadContext_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetGrapeshotUploadUrlProto other) {
      if (other == null) {
        return;
      }
      if (other.SubmissionType != 0) {
        SubmissionType = other.SubmissionType;
      }
      if (other.SubmissionId.Length != 0) {
        SubmissionId = other.SubmissionId;
      }
      fileUploadContext_.Add(other.fileUploadContext_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            submissionType_ = (global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionTypeProto) input.ReadEnum();
            break;
          }
          case 18: {
            SubmissionId = input.ReadString();
            break;
          }
          case 26: {
            fileUploadContext_.AddEntriesFrom(input, _repeated_fileUploadContext_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetGrapeshotUploadUrlOutProto : pb::IMessage<GetGrapeshotUploadUrlOutProto> {
    private static readonly pb::MessageParser<GetGrapeshotUploadUrlOutProto> _parser = new pb::MessageParser<GetGrapeshotUploadUrlOutProto>(() => new GetGrapeshotUploadUrlOutProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetGrapeshotUploadUrlOutProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGrapeshotUploadUrlOutProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGrapeshotUploadUrlOutProto(GetGrapeshotUploadUrlOutProto other) : this() {
      status_ = other.status_;
      fileContextToGrapeshotData_ = other.fileContextToGrapeshotData_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetGrapeshotUploadUrlOutProto Clone() {
      return new GetGrapeshotUploadUrlOutProto(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Niantic.ARDK.Uploader.Protos.GetGrapeshotUploadUrlOutProto.Types.Status status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.Uploader.Protos.GetGrapeshotUploadUrlOutProto.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "file_context_to_grapeshot_data" field.</summary>
    public const int FileContextToGrapeshotDataFieldNumber = 4;
    private static readonly pbc::MapField<string, global::Niantic.ARDK.Uploader.Protos.GrapeshotUploadingDataProto>.Codec _map_fileContextToGrapeshotData_codec
        = new pbc::MapField<string, global::Niantic.ARDK.Uploader.Protos.GrapeshotUploadingDataProto>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Niantic.ARDK.Uploader.Protos.GrapeshotUploadingDataProto.Parser), 34);
    private readonly pbc::MapField<string, global::Niantic.ARDK.Uploader.Protos.GrapeshotUploadingDataProto> fileContextToGrapeshotData_ = new pbc::MapField<string, global::Niantic.ARDK.Uploader.Protos.GrapeshotUploadingDataProto>();
    /// <summary>
    ///  The image upload URLs, one for each image context in the request and keyed by image context.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Niantic.ARDK.Uploader.Protos.GrapeshotUploadingDataProto> FileContextToGrapeshotData {
      get { return fileContextToGrapeshotData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetGrapeshotUploadUrlOutProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetGrapeshotUploadUrlOutProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (!FileContextToGrapeshotData.Equals(other.FileContextToGrapeshotData)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      hash ^= FileContextToGrapeshotData.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      fileContextToGrapeshotData_.WriteTo(output, _map_fileContextToGrapeshotData_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      size += fileContextToGrapeshotData_.CalculateSize(_map_fileContextToGrapeshotData_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetGrapeshotUploadUrlOutProto other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      fileContextToGrapeshotData_.Add(other.fileContextToGrapeshotData_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            status_ = (global::Niantic.ARDK.Uploader.Protos.GetGrapeshotUploadUrlOutProto.Types.Status) input.ReadEnum();
            break;
          }
          case 34: {
            fileContextToGrapeshotData_.AddEntriesFrom(input, _map_fileContextToGrapeshotData_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetGrapeshotUploadUrlOutProto message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("FAILURE")] Failure = 1,
        [pbr::OriginalName("SUCCESS")] Success = 2,
        /// <summary>
        ///  The request did not contain any file contexts.
        /// </summary>
        [pbr::OriginalName("MISSING_FILE_CONTEXTS")] MissingFileContexts = 3,
        /// <summary>
        ///  The request had duplicated file contexts.
        /// </summary>
        [pbr::OriginalName("DUPLICATE_FILE_CONTEXT")] DuplicateFileContext = 4,
        /// <summary>
        ///  client not sending submission type since it's stored on the server with submission id
        /// </summary>
        [pbr::OriginalName("MISSING_SUBMISSION_TYPE")] MissingSubmissionType = 5,
        [pbr::OriginalName("MISSING_SUBMISSION_ID")] MissingSubmissionId = 6,
      }

    }
    #endregion

  }

  public sealed partial class GrapeshotUploadingDataProto : pb::IMessage<GrapeshotUploadingDataProto> {
    private static readonly pb::MessageParser<GrapeshotUploadingDataProto> _parser = new pb::MessageParser<GrapeshotUploadingDataProto>(() => new GrapeshotUploadingDataProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrapeshotUploadingDataProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrapeshotUploadingDataProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrapeshotUploadingDataProto(GrapeshotUploadingDataProto other) : this() {
      chunkData_ = other.chunkData_.Clone();
      ComposeData = other.composeData_ != null ? other.ComposeData.Clone() : null;
      gcsBucket_ = other.gcsBucket_;
      numberOfChunks_ = other.numberOfChunks_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrapeshotUploadingDataProto Clone() {
      return new GrapeshotUploadingDataProto(this);
    }

    /// <summary>Field number for the "chunk_data" field.</summary>
    public const int ChunkDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Niantic.ARDK.Uploader.Protos.GrapeshotChunkDataProto> _repeated_chunkData_codec
        = pb::FieldCodec.ForMessage(10, global::Niantic.ARDK.Uploader.Protos.GrapeshotChunkDataProto.Parser);
    private readonly pbc::RepeatedField<global::Niantic.ARDK.Uploader.Protos.GrapeshotChunkDataProto> chunkData_ = new pbc::RepeatedField<global::Niantic.ARDK.Uploader.Protos.GrapeshotChunkDataProto>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Niantic.ARDK.Uploader.Protos.GrapeshotChunkDataProto> ChunkData {
      get { return chunkData_; }
    }

    /// <summary>Field number for the "compose_data" field.</summary>
    public const int ComposeDataFieldNumber = 2;
    private global::Niantic.ARDK.Uploader.Protos.GrapeshotComposeDataProto composeData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.Uploader.Protos.GrapeshotComposeDataProto ComposeData {
      get { return composeData_; }
      set {
        composeData_ = value;
      }
    }

    /// <summary>Field number for the "gcs_bucket" field.</summary>
    public const int GcsBucketFieldNumber = 3;
    private string gcsBucket_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GcsBucket {
      get { return gcsBucket_; }
      set {
        gcsBucket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "number_of_chunks" field.</summary>
    public const int NumberOfChunksFieldNumber = 4;
    private int numberOfChunks_;
    /// <summary>
    ///  this is set on titan server settings and returned to client
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumberOfChunks {
      get { return numberOfChunks_; }
      set {
        numberOfChunks_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrapeshotUploadingDataProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrapeshotUploadingDataProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!chunkData_.Equals(other.chunkData_)) return false;
      if (!object.Equals(ComposeData, other.ComposeData)) return false;
      if (GcsBucket != other.GcsBucket) return false;
      if (NumberOfChunks != other.NumberOfChunks) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= chunkData_.GetHashCode();
      if (composeData_ != null) hash ^= ComposeData.GetHashCode();
      if (GcsBucket.Length != 0) hash ^= GcsBucket.GetHashCode();
      if (NumberOfChunks != 0) hash ^= NumberOfChunks.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      chunkData_.WriteTo(output, _repeated_chunkData_codec);
      if (composeData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ComposeData);
      }
      if (GcsBucket.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GcsBucket);
      }
      if (NumberOfChunks != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NumberOfChunks);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += chunkData_.CalculateSize(_repeated_chunkData_codec);
      if (composeData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ComposeData);
      }
      if (GcsBucket.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GcsBucket);
      }
      if (NumberOfChunks != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumberOfChunks);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrapeshotUploadingDataProto other) {
      if (other == null) {
        return;
      }
      chunkData_.Add(other.chunkData_);
      if (other.composeData_ != null) {
        if (composeData_ == null) {
          composeData_ = new global::Niantic.ARDK.Uploader.Protos.GrapeshotComposeDataProto();
        }
        ComposeData.MergeFrom(other.ComposeData);
      }
      if (other.GcsBucket.Length != 0) {
        GcsBucket = other.GcsBucket;
      }
      if (other.NumberOfChunks != 0) {
        NumberOfChunks = other.NumberOfChunks;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            chunkData_.AddEntriesFrom(input, _repeated_chunkData_codec);
            break;
          }
          case 18: {
            if (composeData_ == null) {
              composeData_ = new global::Niantic.ARDK.Uploader.Protos.GrapeshotComposeDataProto();
            }
            input.ReadMessage(composeData_);
            break;
          }
          case 26: {
            GcsBucket = input.ReadString();
            break;
          }
          case 32: {
            NumberOfChunks = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrapeshotChunkDataProto : pb::IMessage<GrapeshotChunkDataProto> {
    private static readonly pb::MessageParser<GrapeshotChunkDataProto> _parser = new pb::MessageParser<GrapeshotChunkDataProto>(() => new GrapeshotChunkDataProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrapeshotChunkDataProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrapeshotChunkDataProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrapeshotChunkDataProto(GrapeshotChunkDataProto other) : this() {
      chunkFilePath_ = other.chunkFilePath_;
      chunkNumber_ = other.chunkNumber_;
      UploadAuthentication = other.uploadAuthentication_ != null ? other.UploadAuthentication.Clone() : null;
      DeleteAuthentication = other.deleteAuthentication_ != null ? other.DeleteAuthentication.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrapeshotChunkDataProto Clone() {
      return new GrapeshotChunkDataProto(this);
    }

    /// <summary>Field number for the "chunk_file_path" field.</summary>
    public const int ChunkFilePathFieldNumber = 1;
    private string chunkFilePath_ = "";
    /// <summary>
    ///  upload file path for each chunk file
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChunkFilePath {
      get { return chunkFilePath_; }
      set {
        chunkFilePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "chunk_number" field.</summary>
    public const int ChunkNumberFieldNumber = 2;
    private uint chunkNumber_;
    /// <summary>
    ///  number of file chunks to divide and upload in parallel.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ChunkNumber {
      get { return chunkNumber_; }
      set {
        chunkNumber_ = value;
      }
    }

    /// <summary>Field number for the "upload_authentication" field.</summary>
    public const int UploadAuthenticationFieldNumber = 3;
    private global::Niantic.ARDK.Uploader.Protos.GrapeshotAuthenticationDataProto uploadAuthentication_;
    /// <summary>
    ///  auth info to upload chunk files.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.Uploader.Protos.GrapeshotAuthenticationDataProto UploadAuthentication {
      get { return uploadAuthentication_; }
      set {
        uploadAuthentication_ = value;
      }
    }

    /// <summary>Field number for the "delete_authentication" field.</summary>
    public const int DeleteAuthenticationFieldNumber = 4;
    private global::Niantic.ARDK.Uploader.Protos.GrapeshotAuthenticationDataProto deleteAuthentication_;
    /// <summary>
    ///  auth info to do file clean ups after done uploading and combining files.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.Uploader.Protos.GrapeshotAuthenticationDataProto DeleteAuthentication {
      get { return deleteAuthentication_; }
      set {
        deleteAuthentication_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrapeshotChunkDataProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrapeshotChunkDataProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChunkFilePath != other.ChunkFilePath) return false;
      if (ChunkNumber != other.ChunkNumber) return false;
      if (!object.Equals(UploadAuthentication, other.UploadAuthentication)) return false;
      if (!object.Equals(DeleteAuthentication, other.DeleteAuthentication)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChunkFilePath.Length != 0) hash ^= ChunkFilePath.GetHashCode();
      if (ChunkNumber != 0) hash ^= ChunkNumber.GetHashCode();
      if (uploadAuthentication_ != null) hash ^= UploadAuthentication.GetHashCode();
      if (deleteAuthentication_ != null) hash ^= DeleteAuthentication.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ChunkFilePath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ChunkFilePath);
      }
      if (ChunkNumber != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ChunkNumber);
      }
      if (uploadAuthentication_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UploadAuthentication);
      }
      if (deleteAuthentication_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DeleteAuthentication);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChunkFilePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChunkFilePath);
      }
      if (ChunkNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChunkNumber);
      }
      if (uploadAuthentication_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UploadAuthentication);
      }
      if (deleteAuthentication_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteAuthentication);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrapeshotChunkDataProto other) {
      if (other == null) {
        return;
      }
      if (other.ChunkFilePath.Length != 0) {
        ChunkFilePath = other.ChunkFilePath;
      }
      if (other.ChunkNumber != 0) {
        ChunkNumber = other.ChunkNumber;
      }
      if (other.uploadAuthentication_ != null) {
        if (uploadAuthentication_ == null) {
          uploadAuthentication_ = new global::Niantic.ARDK.Uploader.Protos.GrapeshotAuthenticationDataProto();
        }
        UploadAuthentication.MergeFrom(other.UploadAuthentication);
      }
      if (other.deleteAuthentication_ != null) {
        if (deleteAuthentication_ == null) {
          deleteAuthentication_ = new global::Niantic.ARDK.Uploader.Protos.GrapeshotAuthenticationDataProto();
        }
        DeleteAuthentication.MergeFrom(other.DeleteAuthentication);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ChunkFilePath = input.ReadString();
            break;
          }
          case 16: {
            ChunkNumber = input.ReadUInt32();
            break;
          }
          case 26: {
            if (uploadAuthentication_ == null) {
              uploadAuthentication_ = new global::Niantic.ARDK.Uploader.Protos.GrapeshotAuthenticationDataProto();
            }
            input.ReadMessage(uploadAuthentication_);
            break;
          }
          case 34: {
            if (deleteAuthentication_ == null) {
              deleteAuthentication_ = new global::Niantic.ARDK.Uploader.Protos.GrapeshotAuthenticationDataProto();
            }
            input.ReadMessage(deleteAuthentication_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrapeshotComposeDataProto : pb::IMessage<GrapeshotComposeDataProto> {
    private static readonly pb::MessageParser<GrapeshotComposeDataProto> _parser = new pb::MessageParser<GrapeshotComposeDataProto>(() => new GrapeshotComposeDataProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrapeshotComposeDataProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrapeshotComposeDataProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrapeshotComposeDataProto(GrapeshotComposeDataProto other) : this() {
      targetFilePath_ = other.targetFilePath_;
      Authentication = other.authentication_ != null ? other.Authentication.Clone() : null;
      hash_ = other.hash_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrapeshotComposeDataProto Clone() {
      return new GrapeshotComposeDataProto(this);
    }

    /// <summary>Field number for the "target_file_path" field.</summary>
    public const int TargetFilePathFieldNumber = 1;
    private string targetFilePath_ = "";
    /// <summary>
    ///  upload file path and file name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetFilePath {
      get { return targetFilePath_; }
      set {
        targetFilePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "authentication" field.</summary>
    public const int AuthenticationFieldNumber = 2;
    private global::Niantic.ARDK.Uploader.Protos.GrapeshotAuthenticationDataProto authentication_;
    /// <summary>
    ///  authentication info for file combinations after uploading all chunks
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.Uploader.Protos.GrapeshotAuthenticationDataProto Authentication {
      get { return authentication_; }
      set {
        authentication_ = value;
      }
    }

    /// <summary>Field number for the "hash" field.</summary>
    public const int HashFieldNumber = 3;
    private string hash_ = "";
    /// <summary>
    ///  hash from payload
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hash {
      get { return hash_; }
      set {
        hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrapeshotComposeDataProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrapeshotComposeDataProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TargetFilePath != other.TargetFilePath) return false;
      if (!object.Equals(Authentication, other.Authentication)) return false;
      if (Hash != other.Hash) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TargetFilePath.Length != 0) hash ^= TargetFilePath.GetHashCode();
      if (authentication_ != null) hash ^= Authentication.GetHashCode();
      if (Hash.Length != 0) hash ^= Hash.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TargetFilePath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TargetFilePath);
      }
      if (authentication_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Authentication);
      }
      if (Hash.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Hash);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TargetFilePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetFilePath);
      }
      if (authentication_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Authentication);
      }
      if (Hash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hash);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrapeshotComposeDataProto other) {
      if (other == null) {
        return;
      }
      if (other.TargetFilePath.Length != 0) {
        TargetFilePath = other.TargetFilePath;
      }
      if (other.authentication_ != null) {
        if (authentication_ == null) {
          authentication_ = new global::Niantic.ARDK.Uploader.Protos.GrapeshotAuthenticationDataProto();
        }
        Authentication.MergeFrom(other.Authentication);
      }
      if (other.Hash.Length != 0) {
        Hash = other.Hash;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            TargetFilePath = input.ReadString();
            break;
          }
          case 18: {
            if (authentication_ == null) {
              authentication_ = new global::Niantic.ARDK.Uploader.Protos.GrapeshotAuthenticationDataProto();
            }
            input.ReadMessage(authentication_);
            break;
          }
          case 26: {
            Hash = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GrapeshotAuthenticationDataProto : pb::IMessage<GrapeshotAuthenticationDataProto> {
    private static readonly pb::MessageParser<GrapeshotAuthenticationDataProto> _parser = new pb::MessageParser<GrapeshotAuthenticationDataProto>(() => new GrapeshotAuthenticationDataProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrapeshotAuthenticationDataProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrapeshotAuthenticationDataProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrapeshotAuthenticationDataProto(GrapeshotAuthenticationDataProto other) : this() {
      authorization_ = other.authorization_;
      date_ = other.date_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrapeshotAuthenticationDataProto Clone() {
      return new GrapeshotAuthenticationDataProto(this);
    }

    /// <summary>Field number for the "authorization" field.</summary>
    public const int AuthorizationFieldNumber = 1;
    private string authorization_ = "";
    /// <summary>
    ///  auth token string
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Authorization {
      get { return authorization_; }
      set {
        authorization_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "date" field.</summary>
    public const int DateFieldNumber = 2;
    private string date_ = "";
    /// <summary>
    ///  auth token generation datetime in yyyymmdd'T'hhmmss'Z'
    ///  sample format: 20190925T002628Z
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Date {
      get { return date_; }
      set {
        date_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrapeshotAuthenticationDataProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrapeshotAuthenticationDataProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Authorization != other.Authorization) return false;
      if (Date != other.Date) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Authorization.Length != 0) hash ^= Authorization.GetHashCode();
      if (Date.Length != 0) hash ^= Date.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Authorization.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Authorization);
      }
      if (Date.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Date);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Authorization.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Authorization);
      }
      if (Date.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Date);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrapeshotAuthenticationDataProto other) {
      if (other == null) {
        return;
      }
      if (other.Authorization.Length != 0) {
        Authorization = other.Authorization;
      }
      if (other.Date.Length != 0) {
        Date = other.Date;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Authorization = input.ReadString();
            break;
          }
          case 18: {
            Date = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///  Client rpc for client to notify server about final file upload status.
  ///  This is called after all files associated with the submission_id finished uploading (UPLOAD_DONE)
  ///  Or if there is an error and client give up on retrying (UPLOAD_FAILED)
  /// </summary>
  public sealed partial class AsyncFileUploadCompleteProto : pb::IMessage<AsyncFileUploadCompleteProto> {
    private static readonly pb::MessageParser<AsyncFileUploadCompleteProto> _parser = new pb::MessageParser<AsyncFileUploadCompleteProto>(() => new AsyncFileUploadCompleteProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AsyncFileUploadCompleteProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AsyncFileUploadCompleteProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AsyncFileUploadCompleteProto(AsyncFileUploadCompleteProto other) : this() {
      submissionId_ = other.submissionId_;
      uploadStatus_ = other.uploadStatus_;
      ArCommonMetadata = other.arCommonMetadata_ != null ? other.ArCommonMetadata.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AsyncFileUploadCompleteProto Clone() {
      return new AsyncFileUploadCompleteProto(this);
    }

    /// <summary>Field number for the "submission_id" field.</summary>
    public const int SubmissionIdFieldNumber = 1;
    private string submissionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubmissionId {
      get { return submissionId_; }
      set {
        submissionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "upload_status" field.</summary>
    public const int UploadStatusFieldNumber = 3;
    private global::Niantic.ARDK.Uploader.Protos.AsyncFileUploadCompleteProto.Types.Status uploadStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.Uploader.Protos.AsyncFileUploadCompleteProto.Types.Status UploadStatus {
      get { return uploadStatus_; }
      set {
        uploadStatus_ = value;
      }
    }

    /// <summary>Field number for the "ar_common_metadata" field.</summary>
    public const int ArCommonMetadataFieldNumber = 4;
    private global::Niantic.ARDK.AR.Protobuf.ARCommonMetadata arCommonMetadata_;
    /// <summary>
    ///  Metadata for scans submitted through the ARDK scanning framework
    ///  not populated for non-scanning framework uses
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.AR.Protobuf.ARCommonMetadata ArCommonMetadata {
      get { return arCommonMetadata_; }
      set {
        arCommonMetadata_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AsyncFileUploadCompleteProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AsyncFileUploadCompleteProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubmissionId != other.SubmissionId) return false;
      if (UploadStatus != other.UploadStatus) return false;
      if (!object.Equals(ArCommonMetadata, other.ArCommonMetadata)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SubmissionId.Length != 0) hash ^= SubmissionId.GetHashCode();
      if (UploadStatus != 0) hash ^= UploadStatus.GetHashCode();
      if (arCommonMetadata_ != null) hash ^= ArCommonMetadata.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SubmissionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SubmissionId);
      }
      if (UploadStatus != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) UploadStatus);
      }
      if (arCommonMetadata_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ArCommonMetadata);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SubmissionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubmissionId);
      }
      if (UploadStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) UploadStatus);
      }
      if (arCommonMetadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ArCommonMetadata);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AsyncFileUploadCompleteProto other) {
      if (other == null) {
        return;
      }
      if (other.SubmissionId.Length != 0) {
        SubmissionId = other.SubmissionId;
      }
      if (other.UploadStatus != 0) {
        UploadStatus = other.UploadStatus;
      }
      if (other.arCommonMetadata_ != null) {
        if (arCommonMetadata_ == null) {
          arCommonMetadata_ = new global::Niantic.ARDK.AR.Protobuf.ARCommonMetadata();
        }
        ArCommonMetadata.MergeFrom(other.ArCommonMetadata);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            SubmissionId = input.ReadString();
            break;
          }
          case 24: {
            uploadStatus_ = (global::Niantic.ARDK.Uploader.Protos.AsyncFileUploadCompleteProto.Types.Status) input.ReadEnum();
            break;
          }
          case 34: {
            if (arCommonMetadata_ == null) {
              arCommonMetadata_ = new global::Niantic.ARDK.AR.Protobuf.ARCommonMetadata();
            }
            input.ReadMessage(arCommonMetadata_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AsyncFileUploadCompleteProto message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("UPLOAD_DONE")] UploadDone = 1,
        [pbr::OriginalName("UPLOAD_FAILED")] UploadFailed = 2,
      }

    }
    #endregion

  }

  public sealed partial class AsyncFileUploadCompleteOutProto : pb::IMessage<AsyncFileUploadCompleteOutProto> {
    private static readonly pb::MessageParser<AsyncFileUploadCompleteOutProto> _parser = new pb::MessageParser<AsyncFileUploadCompleteOutProto>(() => new AsyncFileUploadCompleteOutProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AsyncFileUploadCompleteOutProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AsyncFileUploadCompleteOutProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AsyncFileUploadCompleteOutProto(AsyncFileUploadCompleteOutProto other) : this() {
      error_ = other.error_;
      submissionType_ = other.submissionType_;
      poiId_ = other.poiId_;
      postActionGameInfo_ = other.postActionGameInfo_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AsyncFileUploadCompleteOutProto Clone() {
      return new AsyncFileUploadCompleteOutProto(this);
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Niantic.ARDK.Uploader.Protos.AsyncFileUploadCompleteOutProto.Types.ErrorStatus error_ = 0;
    /// <summary>
    ///  retry sending AsyncFileUploadComplete request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.Uploader.Protos.AsyncFileUploadCompleteOutProto.Types.ErrorStatus Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "submission_type" field.</summary>
    public const int SubmissionTypeFieldNumber = 2;
    private global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionTypeProto submissionType_ = 0;
    /// <summary>
    ///  returning submission type to game server for metrics recording purpose.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionTypeProto SubmissionType {
      get { return submissionType_; }
      set {
        submissionType_ = value;
      }
    }

    /// <summary>Field number for the "poi_id" field.</summary>
    public const int PoiIdFieldNumber = 3;
    private string poiId_ = "";
    /// <summary>
    ///  Only populated for POI_AR_VIDEO_SUBMISSION for now.
    ///  The id of the POI that the video has been shot from
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PoiId {
      get { return poiId_; }
      set {
        poiId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "post_action_game_info" field.</summary>
    public const int PostActionGameInfoFieldNumber = 4;
    private pb::ByteString postActionGameInfo_ = pb::ByteString.Empty;
    /// <summary>
    ///  game specific information populated by the post submission action on game server
    ///  proto is defined by game teams separately and should be included on both game server &amp; client
    ///  proto is encoded in bytes, needs to be parsed back into a proto on the client side
    ///  as of v5.0.0, not using Any due to complications with nia-geo-client-proto protoc versions
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PostActionGameInfo {
      get { return postActionGameInfo_; }
      set {
        postActionGameInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AsyncFileUploadCompleteOutProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AsyncFileUploadCompleteOutProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Error != other.Error) return false;
      if (SubmissionType != other.SubmissionType) return false;
      if (PoiId != other.PoiId) return false;
      if (PostActionGameInfo != other.PostActionGameInfo) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Error != 0) hash ^= Error.GetHashCode();
      if (SubmissionType != 0) hash ^= SubmissionType.GetHashCode();
      if (PoiId.Length != 0) hash ^= PoiId.GetHashCode();
      if (PostActionGameInfo.Length != 0) hash ^= PostActionGameInfo.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Error != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Error);
      }
      if (SubmissionType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) SubmissionType);
      }
      if (PoiId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PoiId);
      }
      if (PostActionGameInfo.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(PostActionGameInfo);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Error != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
      }
      if (SubmissionType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SubmissionType);
      }
      if (PoiId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PoiId);
      }
      if (PostActionGameInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PostActionGameInfo);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AsyncFileUploadCompleteOutProto other) {
      if (other == null) {
        return;
      }
      if (other.Error != 0) {
        Error = other.Error;
      }
      if (other.SubmissionType != 0) {
        SubmissionType = other.SubmissionType;
      }
      if (other.PoiId.Length != 0) {
        PoiId = other.PoiId;
      }
      if (other.PostActionGameInfo.Length != 0) {
        PostActionGameInfo = other.PostActionGameInfo;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            error_ = (global::Niantic.ARDK.Uploader.Protos.AsyncFileUploadCompleteOutProto.Types.ErrorStatus) input.ReadEnum();
            break;
          }
          case 16: {
            submissionType_ = (global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionTypeProto) input.ReadEnum();
            break;
          }
          case 26: {
            PoiId = input.ReadString();
            break;
          }
          case 34: {
            PostActionGameInfo = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AsyncFileUploadCompleteOutProto message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ErrorStatus {
        [pbr::OriginalName("UNSET")] Unset = 0,
        [pbr::OriginalName("SERVER_UPDATE_FAILED")] ServerUpdateFailed = 1,
        [pbr::OriginalName("MISSING_SUBMISSION_ID")] MissingSubmissionId = 2,
        /// <summary>
        ///  client not sending submission type since it's stored on the server with submission id
        /// </summary>
        [pbr::OriginalName("MISSING_SUBMISSION_TYPE")] MissingSubmissionType = 3,
        [pbr::OriginalName("MISSING_UPLOAD_STATUS")] MissingUploadStatus = 4,
      }

    }
    #endregion

  }

  public sealed partial class GetARMappingSettingsProto : pb::IMessage<GetARMappingSettingsProto> {
    private static readonly pb::MessageParser<GetARMappingSettingsProto> _parser = new pb::MessageParser<GetARMappingSettingsProto>(() => new GetARMappingSettingsProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetARMappingSettingsProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetARMappingSettingsProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetARMappingSettingsProto(GetARMappingSettingsProto other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetARMappingSettingsProto Clone() {
      return new GetARMappingSettingsProto(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetARMappingSettingsProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetARMappingSettingsProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetARMappingSettingsProto other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  public sealed partial class GetARMappingSettingsOutProto : pb::IMessage<GetARMappingSettingsOutProto> {
    private static readonly pb::MessageParser<GetARMappingSettingsOutProto> _parser = new pb::MessageParser<GetARMappingSettingsOutProto>(() => new GetARMappingSettingsOutProto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetARMappingSettingsOutProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.TitanPoiManagementReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetARMappingSettingsOutProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetARMappingSettingsOutProto(GetARMappingSettingsOutProto other) : this() {
      isClientScanValidationEnabled_ = other.isClientScanValidationEnabled_;
      clientScanValidationBlockedOs_ = other.clientScanValidationBlockedOs_.Clone();
      clientScanValidationBlockedDeviceId_ = other.clientScanValidationBlockedDeviceId_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetARMappingSettingsOutProto Clone() {
      return new GetARMappingSettingsOutProto(this);
    }

    /// <summary>Field number for the "is_client_scan_validation_enabled" field.</summary>
    public const int IsClientScanValidationEnabledFieldNumber = 1;
    private bool isClientScanValidationEnabled_;
    /// <summary>
    ///  AR mapping client scan validation is enabled
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsClientScanValidationEnabled {
      get { return isClientScanValidationEnabled_; }
      set {
        isClientScanValidationEnabled_ = value;
      }
    }

    /// <summary>Field number for the "client_scan_validation_blocked_os" field.</summary>
    public const int ClientScanValidationBlockedOsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_clientScanValidationBlockedOs_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> clientScanValidationBlockedOs_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///  client scan validation blocked device operation system
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ClientScanValidationBlockedOs {
      get { return clientScanValidationBlockedOs_; }
    }

    /// <summary>Field number for the "client_scan_validation_blocked_device_id" field.</summary>
    public const int ClientScanValidationBlockedDeviceIdFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_clientScanValidationBlockedDeviceId_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> clientScanValidationBlockedDeviceId_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///  client scan validation blocked device id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ClientScanValidationBlockedDeviceId {
      get { return clientScanValidationBlockedDeviceId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetARMappingSettingsOutProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetARMappingSettingsOutProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsClientScanValidationEnabled != other.IsClientScanValidationEnabled) return false;
      if(!clientScanValidationBlockedOs_.Equals(other.clientScanValidationBlockedOs_)) return false;
      if(!clientScanValidationBlockedDeviceId_.Equals(other.clientScanValidationBlockedDeviceId_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsClientScanValidationEnabled != false) hash ^= IsClientScanValidationEnabled.GetHashCode();
      hash ^= clientScanValidationBlockedOs_.GetHashCode();
      hash ^= clientScanValidationBlockedDeviceId_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsClientScanValidationEnabled != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsClientScanValidationEnabled);
      }
      clientScanValidationBlockedOs_.WriteTo(output, _repeated_clientScanValidationBlockedOs_codec);
      clientScanValidationBlockedDeviceId_.WriteTo(output, _repeated_clientScanValidationBlockedDeviceId_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsClientScanValidationEnabled != false) {
        size += 1 + 1;
      }
      size += clientScanValidationBlockedOs_.CalculateSize(_repeated_clientScanValidationBlockedOs_codec);
      size += clientScanValidationBlockedDeviceId_.CalculateSize(_repeated_clientScanValidationBlockedDeviceId_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetARMappingSettingsOutProto other) {
      if (other == null) {
        return;
      }
      if (other.IsClientScanValidationEnabled != false) {
        IsClientScanValidationEnabled = other.IsClientScanValidationEnabled;
      }
      clientScanValidationBlockedOs_.Add(other.clientScanValidationBlockedOs_);
      clientScanValidationBlockedDeviceId_.Add(other.clientScanValidationBlockedDeviceId_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            IsClientScanValidationEnabled = input.ReadBool();
            break;
          }
          case 18: {
            clientScanValidationBlockedOs_.AddEntriesFrom(input, _repeated_clientScanValidationBlockedOs_codec);
            break;
          }
          case 26: {
            clientScanValidationBlockedDeviceId_.AddEntriesFrom(input, _repeated_clientScanValidationBlockedDeviceId_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
