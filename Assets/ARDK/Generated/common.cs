// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: argeo/nar/nar-base/proto/common/titan/common.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Niantic.ARDK.Uploader.Protos {

  /// <summary>Holder for reflection information generated from argeo/nar/nar-base/proto/common/titan/common.proto</summary>
  public static partial class CommonReflection {

    #region Descriptor
    /// <summary>File descriptor for argeo/nar/nar-base/proto/common/titan/common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjJhcmdlby9uYXIvbmFyLWJhc2UvcHJvdG8vY29tbW9uL3RpdGFuL2NvbW1v",
            "bi5wcm90bxIxY29tLm5pYW50aWNwcm9qZWN0Lmdlb2RhdGEucGxheWVyc3Vi",
            "bWlzc2lvbi5wcm90byI8Cg9Mb2NhdGlvbkU2UHJvdG8SEwoLbGF0aXR1ZGVf",
            "ZTYYASABKAUSFAoMbG9uZ2l0dWRlX2U2GAIgASgFKr4CChlQbGF5ZXJTdWJt",
            "aXNzaW9uVHlwZVByb3RvEhQKEFRZUEVfVU5TUEVDSUZJRUQQABISCg5QT0lf",
            "U1VCTUlTU0lPThABEhQKEFJPVVRFX1NVQk1JU1NJT04QAhIYChRQT0lfSU1B",
            "R0VfU1VCTUlTU0lPThADEhwKGFBPSV9URVhUX01FVEFEQVRBX1VQREFURRAE",
            "EhcKE1BPSV9MT0NBVElPTl9VUERBVEUQBRIYChRQT0lfVEFLRURPV05fUkVR",
            "VUVTVBAGEhsKF1BPSV9BUl9WSURFT19TVUJNSVNTSU9OEAcSFgoSU1BPTlNP",
            "Ul9QT0lfUkVQT1JUEAgSHwobU1BPTlNPUl9QT0lfTE9DQVRJT05fVVBEQVRF",
            "EAkSIAocUE9JX0NBVEVHT1JZX1ZPVEVfU1VCTUlTU0lPThAKKi4KDk5vbWlu",
            "YXRpb25UeXBlEgsKB1JFR1VMQVIQABIPCgtQUk9WSVNJT05BTBABKsQBChBQ",
            "b2lJbnZhbGlkUmVhc29uEh4KGklOVkFMSURfUkVBU09OX1VOU1BFQ0lGSUVE",
            "EAASGAoUTk9fUEVERVNUUklBTl9BQ0NFU1MQARIgChxPQlNUUlVDVFNfRU1F",
            "UkdFTkNZX1NFUlZJQ0VTEAISIAocUFJJVkFURV9SRVNJREVOVElBTF9QUk9Q",
            "RVJUWRADEgoKBlNDSE9PTBAEEhcKE1BFUk1BTkVOVExZX1JFTU9WRUQQBRIN",
            "CglEVVBMSUNBVEUQBiqAAgoXU3BvbnNvclBvaUludmFsaWRSZWFzb24SIgoe",
            "U1BPTlNPUl9QT0lfUkVBU09OX1VOU1BFQ0lGSUVEEAASJQohU1BPTlNPUl9Q",
            "T0lfUkVBU09OX0RPRVNfTk9UX0VYSVNUEAESHwobU1BPTlNPUl9QT0lfUkVB",
            "U09OX05PVF9TQUZFEAISIwofU1BPTlNPUl9QT0lfUkVBU09OX05PVF9UUlVU",
            "SEZVTBADEioKJlNQT05TT1JfUE9JX1JFQVNPTl9OT1RfRkFNSUxZX0ZSSUVO",
            "RExZEAQSKAokU1BPTlNPUl9QT0lfUkVBU09OX09GRkVOU0lWRV9DT05URU5U",
            "EAUqSwoIVXNlclR5cGUSCgoGUExBWUVSEAASDQoJREVWRUxPUEVSEAESDAoI",
            "U1VSVkVZT1IQAhIWChJERVZFTE9QRVJfOFRIX1dBTEwQAypqCgdTY2FuVGFn",
            "EhAKDERFRkFVTFRfU0NBThAAEgoKBlBVQkxJQxABEgsKB1BSSVZBVEUQAhIT",
            "Cg9XQVlTUE9UX0NFTlRSSUMQAxINCglGUkVFX0ZPUk0QBBIQCgxFWFBFUklN",
            "RU5UQUwQBUIfqgIcTmlhbnRpYy5BUkRLLlVwbG9hZGVyLlByb3Rvc2IGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Niantic.ARDK.Uploader.Protos.PlayerSubmissionTypeProto), typeof(global::Niantic.ARDK.Uploader.Protos.NominationType), typeof(global::Niantic.ARDK.Uploader.Protos.PoiInvalidReason), typeof(global::Niantic.ARDK.Uploader.Protos.SponsorPoiInvalidReason), typeof(global::Niantic.ARDK.Uploader.Protos.UserType), typeof(global::Niantic.ARDK.Uploader.Protos.ScanTag), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Niantic.ARDK.Uploader.Protos.LocationE6Proto), global::Niantic.ARDK.Uploader.Protos.LocationE6Proto.Parser, new[]{ "LatitudeE6", "LongitudeE6" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///  The type of submission a player may perform.
  /// </summary>
  public enum PlayerSubmissionTypeProto {
    /// <summary>
    ///  Default value for backwards-compatibility. Existing code may treat this as POI_SUBMISSION as
    ///  that was originally the only type of submission.
    /// </summary>
    [pbr::OriginalName("TYPE_UNSPECIFIED")] TypeUnspecified = 0,
    /// <summary>
    ///  Point of interest (POI) submission.
    /// </summary>
    [pbr::OriginalName("POI_SUBMISSION")] PoiSubmission = 1,
    /// <summary>
    ///  Route (collection of POIs) submission.
    /// </summary>
    [pbr::OriginalName("ROUTE_SUBMISSION")] RouteSubmission = 2,
    /// <summary>
    ///  POI photo submission
    /// </summary>
    [pbr::OriginalName("POI_IMAGE_SUBMISSION")] PoiImageSubmission = 3,
    /// <summary>
    ///  POI simple text metadata edit submission
    /// </summary>
    [pbr::OriginalName("POI_TEXT_METADATA_UPDATE")] PoiTextMetadataUpdate = 4,
    /// <summary>
    ///  POI location update submission
    /// </summary>
    [pbr::OriginalName("POI_LOCATION_UPDATE")] PoiLocationUpdate = 5,
    /// <summary>
    ///  POI takedown request
    /// </summary>
    [pbr::OriginalName("POI_TAKEDOWN_REQUEST")] PoiTakedownRequest = 6,
    /// <summary>
    ///  AR video upload request
    /// </summary>
    [pbr::OriginalName("POI_AR_VIDEO_SUBMISSION")] PoiArVideoSubmission = 7,
    /// <summary>
    ///  sponsored poi report request
    /// </summary>
    [pbr::OriginalName("SPONSOR_POI_REPORT")] SponsorPoiReport = 8,
    /// <summary>
    ///  sponsor poi location update
    /// </summary>
    [pbr::OriginalName("SPONSOR_POI_LOCATION_UPDATE")] SponsorPoiLocationUpdate = 9,
    /// <summary>
    ///  Category voting
    /// </summary>
    [pbr::OriginalName("POI_CATEGORY_VOTE_SUBMISSION")] PoiCategoryVoteSubmission = 10,
  }

  public enum NominationType {
    /// <summary>
    ///  To cater to existing nomination flow, and for backward compatibility.
    ///  Nominations submitted by players in games e.g. pgo.
    /// </summary>
    [pbr::OriginalName("REGULAR")] Regular = 0,
    /// <summary>
    ///  This nomination type is only available to lightship and 8thWall developers.
    ///  In case of WAYSPOT NOMINATION: skips the wayfarer approval/rejection process, and results in
    ///  the creation of a provisional wayspot almost immediately. A provisional wayspot is a temporary
    ///  state, which will switch to either ACTIVE or RETIRED in approx 2 business days.
    ///  In case of IMAGE SUBMISSION: images associated with provisional wayspots will be provisional
    ///  in nature. Upon approval of provisional wayspot, such images will become part of regular images.
    /// </summary>
    [pbr::OriginalName("PROVISIONAL")] Provisional = 1,
  }

  public enum PoiInvalidReason {
    [pbr::OriginalName("INVALID_REASON_UNSPECIFIED")] InvalidReasonUnspecified = 0,
    /// <summary>
    ///  POI does not have safe pedestrian access
    /// </summary>
    [pbr::OriginalName("NO_PEDESTRIAN_ACCESS")] NoPedestrianAccess = 1,
    /// <summary>
    ///  Gathering around the POI obstructs or interferes with emergency services
    /// </summary>
    [pbr::OriginalName("OBSTRUCTS_EMERGENCY_SERVICES")] ObstructsEmergencyServices = 2,
    /// <summary>
    ///  POI is on private residential property
    /// </summary>
    [pbr::OriginalName("PRIVATE_RESIDENTIAL_PROPERTY")] PrivateResidentialProperty = 3,
    /// <summary>
    ///  POI is too close to childcare or school (K-12) facilities
    /// </summary>
    [pbr::OriginalName("SCHOOL")] School = 4,
    /// <summary>
    ///  The POI has been permanently removed
    /// </summary>
    [pbr::OriginalName("PERMANENTLY_REMOVED")] PermanentlyRemoved = 5,
    /// <summary>
    ///  The POI is a duplicate of another existing POI
    /// </summary>
    [pbr::OriginalName("DUPLICATE")] Duplicate = 6,
  }

  public enum SponsorPoiInvalidReason {
    [pbr::OriginalName("SPONSOR_POI_REASON_UNSPECIFIED")] SponsorPoiReasonUnspecified = 0,
    /// <summary>
    ///  sponsored poi location does not exist
    /// </summary>
    [pbr::OriginalName("SPONSOR_POI_REASON_DOES_NOT_EXIST")] SponsorPoiReasonDoesNotExist = 1,
    /// <summary>
    ///  sponsored poi location not safe
    /// </summary>
    [pbr::OriginalName("SPONSOR_POI_REASON_NOT_SAFE")] SponsorPoiReasonNotSafe = 2,
    /// <summary>
    ///  sponsored poi location is not truthful (needs add'l supporting text)
    /// </summary>
    [pbr::OriginalName("SPONSOR_POI_REASON_NOT_TRUTHFUL")] SponsorPoiReasonNotTruthful = 3,
    /// <summary>
    ///  sponsored poi location not family friendly (needs add'l supporting text)
    /// </summary>
    [pbr::OriginalName("SPONSOR_POI_REASON_NOT_FAMILY_FRIENDLY")] SponsorPoiReasonNotFamilyFriendly = 4,
    /// <summary>
    ///  sponsored poi contains offensive content (needs add'l supporting text)
    /// </summary>
    [pbr::OriginalName("SPONSOR_POI_REASON_OFFENSIVE_CONTENT")] SponsorPoiReasonOffensiveContent = 5,
  }

  /// <summary>
  ///  user types for NMA
  /// </summary>
  public enum UserType {
    [pbr::OriginalName("PLAYER")] Player = 0,
    [pbr::OriginalName("DEVELOPER")] Developer = 1,
    [pbr::OriginalName("SURVEYOR")] Surveyor = 2,
    /// <summary>
    ///  8th Wall developer; more for player submission distinction in Titan than
    ///  for NMA/WFA
    /// </summary>
    [pbr::OriginalName("DEVELOPER_8TH_WALL")] Developer8ThWall = 3,
  }

  public enum ScanTag {
    /// <summary>
    ///  To cater for existing scans for backward compatibility.
    ///  Scans submitted by players in games e.g. pgo. These scans are public and wayspot centric.
    /// </summary>
    [pbr::OriginalName("DEFAULT_SCAN")] DefaultScan = 0,
    /// <summary>
    ///  Public Scans become part of the public vps map.
    /// </summary>
    [pbr::OriginalName("PUBLIC")] Public = 1,
    /// <summary>
    ///  Private Scans are processed by the mapping team's private scan processing pipeline. These
    ///  scans do not become part of the public vps map.
    ///  Note: Currently, only developers can submit private scans.
    /// </summary>
    [pbr::OriginalName("PRIVATE")] Private = 2,
    /// <summary>
    ///  Wayspot-centric scans are associated with a wayspot.
    /// </summary>
    [pbr::OriginalName("WAYSPOT_CENTRIC")] WayspotCentric = 3,
    /// <summary>
    ///  Free-form scans are not associated with any wayspot. Surveyors can only submit public
    ///  free-form scans. Developers can submit public, or private, free-form scans.
    /// </summary>
    [pbr::OriginalName("FREE_FORM")] FreeForm = 4,
    /// <summary>
    ///  Experimental scans are used for different ops' projects, and go into the mapping team's
    ///  experimental bucket. Experimental scans can be free-form, or wayspot centric.
    ///  // Note: Currently, only surveyors can submit experimental scans.
    /// </summary>
    [pbr::OriginalName("EXPERIMENTAL")] Experimental = 5,
  }

  #endregion

  #region Messages
  /// <summary>
  ///  Simple common location message to consolidate a latitude/longitude location into a single field
  ///  Values are latitude/longitude degrees in E6 decimal format (i.e. 6 digits of decimal precision
  ///  expressed as an integer)
  /// </summary>
  public sealed partial class LocationE6Proto : pb::IMessage<LocationE6Proto> {
    private static readonly pb::MessageParser<LocationE6Proto> _parser = new pb::MessageParser<LocationE6Proto>(() => new LocationE6Proto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LocationE6Proto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Niantic.ARDK.Uploader.Protos.CommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationE6Proto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationE6Proto(LocationE6Proto other) : this() {
      latitudeE6_ = other.latitudeE6_;
      longitudeE6_ = other.longitudeE6_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LocationE6Proto Clone() {
      return new LocationE6Proto(this);
    }

    /// <summary>Field number for the "latitude_e6" field.</summary>
    public const int LatitudeE6FieldNumber = 1;
    private int latitudeE6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LatitudeE6 {
      get { return latitudeE6_; }
      set {
        latitudeE6_ = value;
      }
    }

    /// <summary>Field number for the "longitude_e6" field.</summary>
    public const int LongitudeE6FieldNumber = 2;
    private int longitudeE6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LongitudeE6 {
      get { return longitudeE6_; }
      set {
        longitudeE6_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LocationE6Proto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LocationE6Proto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LatitudeE6 != other.LatitudeE6) return false;
      if (LongitudeE6 != other.LongitudeE6) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LatitudeE6 != 0) hash ^= LatitudeE6.GetHashCode();
      if (LongitudeE6 != 0) hash ^= LongitudeE6.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LatitudeE6 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LatitudeE6);
      }
      if (LongitudeE6 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LongitudeE6);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LatitudeE6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LatitudeE6);
      }
      if (LongitudeE6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LongitudeE6);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LocationE6Proto other) {
      if (other == null) {
        return;
      }
      if (other.LatitudeE6 != 0) {
        LatitudeE6 = other.LatitudeE6;
      }
      if (other.LongitudeE6 != 0) {
        LongitudeE6 = other.LongitudeE6;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            LatitudeE6 = input.ReadInt32();
            break;
          }
          case 16: {
            LongitudeE6 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
